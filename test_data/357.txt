Note in particular that since b0 ≤ k, as long as k = O(n), the total actual cost is O(n). In other
words, if we execute at least n = Ω(k) INCREMENT operations, the total actual cost is O(n),
no matter what initial value the counter contains.
Exercises 17.3-1
Suppose we have a potential function Φ such that Φ(Di) ≥ Φ(D0) for all i, but Φ(D0) ≠ = 0.
Show that there exists a potential function Φ′ such that Φ′(D0) = 0, Φ′(Di) ≥ 0 for all i ≥ 1, and
the amortized costs using Φ′ are the same as theamortized costs using Φ.

Exercises 17.3-2
Redo Exercise 17.1-3 using a potential method of analysis.

Exercises 17.3-3
Consider an ordinary binary min-heap data structure with n elements that supports the
instructions INSERT and EXTRACT-MIN in O(lg n) worst-case time. Give a potential
function Φ such that the amortized cost of INSERT is O(lg n) and the amortized cost of
EXTRACT-MIN is O(1), and show that it works.

Exercises 17.3-4
What is the total cost of executing n of the stack operations PUSH, POP, and MULTIPOP,
assuming that the stack begins with s0 objects and finishes with sn objects?

Exercises 17.3-5
Suppose that a counter begins at a number with b 1's in its binary representation, rather than at
0. Show that the cost of performing n INCREMENT operations is O(n) if n = Ω(b). (Do not
assume that b is constant.)

