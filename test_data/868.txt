(34.2)

and thus this formula φ belongs to SAT.
The naive algorithm to determine whether an arbitrary boolean formula is satisfiable does not
run in polynomial time. There are 2n possible assignments in a formula φ with n variables. If
the length of φ is polynomial in n, then checking every assignment requires Ω(2n) time,
which is superpolynomial in the length of φ . As the following theorem shows, a
polynomial-time algorithm is unlikely to exist.
Theorem 34.9
Satisfiability of boolean formulas is NP-complete.
Proof We start by arguing that SAT NP. Then we prove that CIRCUIT-SAT is NP-hard by
showing that CIRCUIT-SAT ≤P SAT; by Lemma 34.8, this will prove the theorem.
To show that SAT belongs to NP, we show that a certificate consisting of a satisfying
assignment for an input formula φ can be verified in polynomial time. The verifying algorithm
simply replaces each variable in the formula with its corresponding value and then evaluates
the expression, much as we did in equation (34.2) above. This task is easily done in
polynomial time. If the expression evaluates to 1, the formula is satisfiable. Thus, the first
condition of Lemma 34.8 for NP-completeness holds.
To prove that SAT is NP-hard, we show that CIRCUIT-SAT ≤P SAT. In other words, any
instance of circuit satisfiability can be reduced in polynomial time to an instance of formula
satisfiability. Induction can be used to express any boolean combinational circuit as a boolean
formula. We simply look at the gate that produces the circuit output and inductively express
each of the gate's inputs as formulas. The formula for the circuit is then obtained by writing an
expression that applies the gate's function to its inputs' formulas.
Unfortunately, this straightforward method does not constitute a polynomial-time reduction.
As Exercise 34.4-1 asks you to show, shared subformulas-which arise from gates whose
output wires have fan-out of 2 or more-can cause the size of the generated formula to grow
exponentially. Thus, the reduction algorithm must be somewhat more clever.
Figure 34.10 illustrates the basic idea of the reduction from CIRCUIT-SAT to SAT on the
circuit from Figure 34.8(a). For each wire xi in the circuit C, the formula φ has a variable xi .
The proper operation of a gate can now be expressed as a formula involving the variables of
its incident wires. For example, the operation of the output AND gate is x10 ↔ (x7 x8 x9).

