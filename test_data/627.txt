Exercises 27.4-4:
Consider a merging network with inputs a1, a2,..., an, for n an exact power of 2, in which the
two monotonic sequences to be merged are a1, a3,..., an-1 and a2, a4,..., an . Prove that
the number of comparators in this kind of merging network is Φ(n lg n). Why is this an
interesting lower bound? (Hint: Partition the comparators into three sets.)

Exercises 27.4-5:
Prove that any merging network, regardless of the order of inputs, requires Ω(n lg n)
comparators.

27.5 A sorting network
We now have all the necessary tools to construct a network that can sort any input sequence.
The sorting network SORTER[n] uses the merging network to implement a parallel version of
merge sort from Section 2.3.1. The construction and operation of the sorting network are
illustrated in Figure 27.12.

Figure 27.12: The sorting network SORTER[n] constructed by recursively combining
merging networks. (a) The recursive construction. (b) Unrolling the recursion. (c) Replacing
the MERGER boxes with the actual merging networks. The depth of each comparator is
indicated, and sample zero-one values are shown on the wires.
Figure 27.12(a) shows the recursive construction of SORTER[n]. The n input elements are
sorted by using two copies of SORTER[n/2] recursively to sort (in parallel) two subsequences
of length n/2 each. The two resulting sequences are then merged by MERGER[n]. The
boundary case for the recursion is when n = 1, in which case we can use a wire to sort the 1element sequence, since a 1-element sequence is already sorted. Figure 27.12(b) shows the
result of unrolling the recursion, and Figure 27.12(c) shows the actual network obtained by
replacing the MERGER boxes in Figure 27.12(b) with the actual merging networks.

