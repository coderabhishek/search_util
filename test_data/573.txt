Let G = (V, E) be a flow network, let f be a preflow in G, and let h be a height function on V.
For any two vertices u, v V, if h(u) > h(v) + 1, then (u, v) is not an edge in the residual
graph.

The push operation

The basic operation PUSH(u, v) can be applied if u is an overflowing vertex, cf (u, v) > 0, and
h(u) = h(v) + 1. The pseudocode below updates the preflow f in an implied network G = (V,
E). It assumes that residual capacities can also be computed in constant time given c and f.
The excess flow stored at a vertex u is maintained as the attribute e[u], and the height of u is
maintained as the attribute h[u]. The expression df (u, v) is a temporary variable that stores the
amount of flow that can be pushed from u to v.
PUSH(u, v)
1 ▹ Applies when: u is overflowing, cf(u, v) > 0, and h[u] = h[v] + 1.
2
3
4
5
6
7

▹ Action: Push df(u, v) = min(e[u], cf(u, v)) units of flow from u to v.
df(u, v) ← min(e[u], cf(u, v))
f[u, v] ← f[u, v] + df(u, v)
f[v, u] ← - f[u, v]
e[u] ← e[u] - df(u, v)
e[v] ← e[v] + df(u, v)

The code for PUSH operates as follows. Vertex u is assumed to have a positive excess e[u],
and the residual capacity of (u, v) is positive. Thus, we can we increase the flow from u to v
by df(u, v) = min(e[u], cf (u, v)) without causing e[u] to become negative or the capacity c(u,
v) to be exceeded. Line 3 computes the value df(u, v), and we update f in lines 4-5 and e in
lines 6-7. Thus, if f is a preflow before PUSH is called, it remains a preflow afterward.
Observe that nothing in the code for PUSH depends on the heights of u and v, yet we prohibit
it from being invoked unless h[u] = h[v] + 1. Thus, excess flow is pushed downhill only by a
height differential of 1. By Lemma 26.13, no residual edges exist between two vertices whose
heights differ by more than 1, and thus, as long as the attribute h is indeed a height function,
there is nothing to be gained by allowing flow to be pushed downhill by a height differential
of more than 1.
We call the operation PUSH(u, v) a push from u to v. If a push operation applies to some edge
(u, v) leaving a vertex u, we also say that the push operation applies to u. It is a saturating
push if edge (u, v) becomes saturated (cf(u, v) = 0 afterward); otherwise, it is a nonsaturating
push. If an edge is saturated, it does not appear in the residual network. A simple lemma
characterizes one result of a nonsaturating push.
Lemma 26.14
After a nonsaturating push from u to v, the vertex u is no longer overflowing.

