Figure 13.3: An example of how the procedure LEFT-ROTATE(T, x) modifies a binary
search tree. Inorder tree walks of the input tree and the modified tree produce the same listing
of key values.
Exercises 13.2-1
Write pseudocode for RIGHT-ROTATE.

Exercises 13.2-2
Argue that in every n-node binary search tree, there are exactly n - 1 possible rotations.

Exercises 13.2-3
Let a, b, and c be arbitrary nodes in subtrees α, β, and γ, respectively, in the left tree of Figure
13.2. How do the depths of a, b, and c change when a left rotation is performed on node x in
the figure?

Exercises 13.2-4
Show that any arbitrary n-node binary search tree can be transformed into any other arbitrary
n-node binary search tree using O(n) rotations. (Hint: First show that at most n - 1 right
rotations suffice to transform the tree into a right-going chain.)

Exercises 13.2-5: ⋆

