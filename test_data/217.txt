(11.7)

which completes the proof.

Corollary 11.12
If we store n keys in a hash table of size m = n using a hash function h randomly chosen from
a universal class of hash functions and we set the size of each secondary hash table to
for j = 0, 1, ..., m - 1, then the probability that the total storage used for secondary hash tables
exceeds 4n is less than 1/2.
Proof Again we apply Markov's inequality (C.29), Pr {X ≥ t} ≤ E [X] /t, this time to inequality
(11.7), with
and t = 4n:

From Corollary 11.12, we see that testing a few randomly chosen hash functions from the
universal family will quickly yield one that uses a reasonable amount of storage.
Exercises 11.5-1: ⋆
Suppose that we insert n keys into a hash table of size m using open addressing and uniform
hashing. Let p(n, m) be the probability that no collisions occur. Show that p(n, m) ≤ e-n(n-1)/2m.
(Hint: See equation (3.11).) Argue that when n exceeds , the probability of avoiding
collisions goes rapidly to zero.

Problems 11-1: Longest-probe bound for hashing
A hash table of size m is used to store n items, with n ≤ m/2. Open addressing is used for
collision resolution.
a. Assuming uniform hashing, show that for i = 1, 2, ..., n, the probability that the ith
insertion requires strictly more than k probes is at most 2-k.
b. Show that for i = 1, 2, ..., n, the probability that the ith insertion requires more than 2
lg n probes is at most 1/n2.

