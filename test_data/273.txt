•

If tree T contains an interval that overlaps i, then there is such an interval in the
subtree rooted at x.

We use this loop invariant as follows:
•
•

Initialization: Prior to the first iteration, line 1 sets x to be the root of T , so that the
invariant holds.
Maintenance: In each iteration of the while loop, either line 4 or line 5 is executed.
We shall show that the loop invariant is maintained in either case.
If line 5 is executed, then because of the branch condition in line 3, we have left[x] =
nil[T], or max[left[x]]< low[i]. If left[x] = nil[T], the subtree rooted at left[x] clearly
contains no interval that overlaps i, and so setting x to right[x] maintains the invariant.
Suppose, therefore, that left[x] ≠ nil[T] and max[left[x]]< low[i]. As Figure 14.5(a)
shows, for each interval i' in x's left subtree, we have
high[i'] ≤ max[left[x]]
< low[i].

Figure 14.5: Intervals in the proof of Theorem 14.2. The value of max[left[x]] is shown
in each case as a dashed line. (a) The search goes right. No interval i' in x's left subtree
can overlap i. (b) The search goes left. The left subtree of x contains an interval that
overlaps i (situation not shown), or there is an interval i' in x's left subtree such that
high[i'] = max[left[x]]. Since i does not overlap i', neither does it overlap any interval
i" in x's right subtree, since low[i'] ≤ low[i"].
By the interval trichotomy, therefore, i' and i do not overlap. Thus, the left subtree of x
contains no intervals that overlap i, so that setting x to right[x] maintains the invariant.
If, on the other hand, line 4 is executed, then we will show that the contrapositive of
the loop invariant holds. That is, if there is no interval overlapping i in the subtree
rooted at left[x], then there is no interval overlapping i anywhere in the tree. Since line
4 is executed, then because of the branch condition in line 3, we have max[left[x]] ≥
low[i]. Moreover, by definition of the max field, there must be some interval i' in x's
left subtree such that
high[i'] = max[left[x]]
≥ low[i].
(Figure 14.5(b) illustrates the situation.) Since i and i' do not overlap, and since it is
not true that high[i']< low[i], it follows by the interval trichotomy that high[i]< low[i'].
Interval trees are keyed on the low endpoints of intervals, and thus the search-tree
property implies that for any interval i" in x's right subtree,

