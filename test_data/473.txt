Professor Deaver claims that the algorithm for strongly connected components can be
simplified by using the original (instead of the transpose) graph in the second depth-first
search and scanning the vertices in order of increasing finishing times. Is the professor
correct?

Exercises 22.5-4
Prove that for any directed graph G, we have ((GT)SCC)T = GSCC. That is, the transpose of the
component graph of GT is the same as the component graph of G.

Exercises 22.5-5
Give an O(V + E)-time algorithm to compute the component graph of a directed graph G = (V,
E). Make sure that there is at most one edge between two vertices in the component graph
your algorithm produces.

Exercises 22.5-6
Given a directed graph G = (V, E), explain how to create another graph G′ = (V, E′) such that
(a) G′ has the same strongly connected components as G, (b) G′ has the same component
graph as G, and (c) E′ is as small as possible. Describe a fast algorithm to compute G′.

Exercises 22.5-7
A directed graph G = (V, E) is said to be semiconnected if, for all pairs of vertices u, v
we have
or
. Give an efficient algorithm to determine whether or not G is
semiconnected. Prove that your algorithm is correct, and analyze its running time.

V,

Problems 22-1: Classifying edges by breadth-first search
A depth-first forest classifies the edges of a graph into tree, back, forward, and cross edges. A
breadth-first tree can also be used to classify the edges reachable from the source of the search
into the same four categories.

