Problems 30-2: Toeplitz matrices
A Toeplitz matrix is an n × n matrix A = (aij) such that aij = ai-1, j-1 for i = 2, 3,..., n and j = 2,
3,..., n.
a. Is the sum of two Toeplitz matrices necessarily Toeplitz? What about the product?
b. Describe how to represent a Toeplitz matrix so that two n × n Toeplitz matrices can be
added in O(n) time.
c. Give an O(n lg n)-time algorithm for multiplying an n × n Toeplitz matrix by a vector
of length n. Use your representation from part (b).
d. Give an efficient algorithm for multiplying two n × n Toeplitz matrices. Analyze its
running time.

Problems 30-3: Multidimensional Fast Fourier Transform
We can generalize the 1-dimensional Discrete Fourier Transform defined by equation (30.8)
to d dimensions. Our input is a d-dimensional array
whose dimensions are n1, n2,...,
nd, where n1n2 · · · nd = n. We define the d-dimensional Discrete Fourier Transform by the
equation

for 0 ≤ k1 < n1, 0 ≤ k2 < n2,..., 0 ≤ kd < nd.
a. Show that we can compute a d-dimensional DFT by computing 1-dimensional DFT's
on each dimension in turn. That is, first compute n/n1 separate 1-dimensional DFT's
along dimension 1. Then, using the result of the DFT's along dimension 1 as the input,
compute n/n2 separate 1-dimensional DFT's along dimension 2. Using this result as the
input, compute n/n3 separate 1-dimensional DFT's along dimension 3, and so on,
through dimension d.
b. Show that the ordering of dimensions does not matter, so that we can compute a ddimensional DFT by computing the 1-dimensional DFT's in any order of the d
dimensions.
c. Show that if we compute each 1-dimensional DFT by computing the Fast Fourier
Transform, the total time to compute a d-dimensional DFT is O(n lg n), independent
of d.

Problems 30-4: Evaluating all derivatives of a polynomial at a point
Given a polynomial A(x) of degree-bound n, its tth derivative is defined by

