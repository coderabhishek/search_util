h. Give an O(E)-time algorithm to label each edge e of G with a positive integer bcc[e]
such that bcc[e] = bcc[e′] if and only if e and e′ are in the same biconnected
component.

Problems 22-3: Euler tour
An Euler tour of a connected, directed graph G = (V, E) is a cycle that traverses each edge of
G exactly once, although it may visit a vertex more than once.
a. Show that G has an Euler tour if and only if in-degree (v) = out-degree (v) for each
vertex v V.
b. Describe an O(E)-time algorithm to find an Euler tour of G if one exists. (Hint: Merge
edge-disjoint cycles.)

Problems 22-4: Reachability
Let G = (V, E) be a directed graph in which each vertex u V is labeled with a unique integer
L(u) from the set {1, 2,..., |V|}. For each vertex u V, let
be the set of vertices
that are reachable from u. Define min(u) to be the vertex in R(u) whose label is minimum, i.e.,
min(u) is the vertex v such that L(v) = min {L(w) : w R(u)}. Give an O(V + E)-time
algorithm that computes min(u) for all vertices u V.

Chapter notes
Even [87] and Tarjan [292] are excellent references for graph algorithms.
Breadth-first search was discovered by Moore [226] in the context of finding paths through
mazes. Lee [198] independently discovered the same algorithm in the context of routing wires
on circuit boards.
Hopcroft and Tarjan [154] advocated the use of the adjacency-list representation over the
adjacency-matrix representation for sparse graphs and were the first to recognize the
algorithmic importance of depth-first search. Depth-first search has been widely used since
the late 1950's, especially in artificial intelligence programs.
Tarjan [289] gave a linear-time algorithm for finding strongly connected components. The
algorithm for strongly connected components in Section 22.5 is adapted from Aho, Hopcroft,
and Ullman [6], who credit it to S. R. Kosaraju (unpublished) and M. Sharir [276]. Gabow
[101] also developed an algorithm for strongly connected components that is based on
contracting cycles and uses two stacks to make it run in linear time. Knuth [182] was the first
to give a linear-time algorithm for topological sorting.

Chapter 23: Minimum Spanning Trees

