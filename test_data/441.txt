Using Exercise 21.4-2, give a simple proof that operations on a disjoint-set forest with union
by rank but without path compression run in O(m lg n) time.

Exercises 21.4-5
Professor Dante reasons that because node ranks increase strictly along a path to the root,
node levels must monotonically increase along the path. In other words, if rank(x) > 0 and
p[x] is not a root, then level(x) ≤ level(p[x]). Is the professor correct?

Exercises 21.4-6: ⋆
Consider the function α'(n) = min {k : Ak (1) ≥ lg(n + 1)}. Show that α'(n) ≤ 3 for all practical
values of n and, using Exercise 21.4-2, show how to modify the potential-function argument
to prove that a sequence of m MAKE-SET, UNION, and FIND-SET operations, n of which
are MAKE-SET operations, can be performed on a disjoint-set forest with union by rank and
path compression in worst-case time O(m α'(n)).

Problems 21-1: Off-line minimum
The off-line minimum problem asks us to maintain a dynamic set T of elements from the
domain {1, 2, ..., n} under the operations INSERT and EXTRACT-MIN. We are given a
sequence S of n INSERT and m EXTRACT-MIN calls, where each key in {1, 2, ..., n} is
inserted exactly once. We wish to determine which key is returned by each EXTRACT-MIN
call. Specifically, we wish to fill in an array extracted[1 m], where for i = 1, 2, ..., m,
extracted[i] is the key returned by the ith EXTRACT-MIN call. The problem is "off-line" in
the sense that we are allowed to process the entire sequence S before determining any of the
returned keys.
a. In the following instance of the off-line minimum problem, each INSERT is
represented by a number and each EXTRACT-MIN is represented by the letter E:
4, 8, E, 3, E, 9, 2, 6, E, E, E, 1, 7, E, 5.
Fill in the correct values in the extracted array.
To develop an algorithm for this problem, we break the sequence S into homogeneous
subsequences. That is, we represent S by
I1, E, I2, E, I3, ..., Im, E, Im+1,

