linear in the total number of elements, equation (8.1) tells us that bucket sort will run in linear
time.
Exercises 8.4-1
Using Figure 8.4 as a model, illustrate the operation of BUCKET-SORT on the array A =
.79, .13, .16, .64, .39, .20, .89, .53, .71, .42 .

Exercises 8.4-2
What is the worst-case running time for the bucket-sort algorithm? What simple change to the
algorithm preserves its linear expected running time and makes its worst-case running time
O(n lg n)?

Exercises 8.4-3
Let X be a random variable that is equal to the number of heads in two flips of a fair coin.
What is E [X2]? What is E2 [X]?

Exercises 8.4-4: ⋆
for i = 1, 2, . . ., n.
We are given n points in the unit circle, pi = (xi, yi), such that
Suppose that the points are uniformly distributed; that is, the probability of finding a point in
any region of the circle is proportional to the area of that region. Design a Θ(n) expected-time
algorithm to sort the n points by their distances
from the origin. (Hint: Design the
bucket sizes in BUCKET-SORT to reflect the uniform distribution of the points in the unit
circle.)

Exercises 8.4-5: ⋆
A probability distribution function P(x) for a random variable X is defined by P(x) = Pr {X ≤
x}. Suppose that a list of n random variables X1, X2, . . .,Xn is drawn from a continuous
probability distribution function P that is computable in O(1) time. Show how to sort these
numbers in linear expected time.

