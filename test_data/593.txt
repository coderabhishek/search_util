An n × n grid is an undirected graph consisting of n rows and n columns of vertices, as shown
in Figure 26.11. We denote the vertex in the ith row and the jth column by (i, j). All vertices
in a grid have exactly four neighbors, except for the boundary vertices, which are the points (i,
j) for which i = 1, i = n, j = 1, or j = n.

Figure 26.11: Grids for the escape problem. Starting points are black, and other grid vertices
are white. (a) A grid with an escape, shown by shaded paths. (b) A grid with no escape.
Given m ≤ n2 starting points (x1, y1), (x2, y2), . . . ,(xm, ym) in the grid, the escape problem is to
determine whether or not there are m vertex-disjoint paths from the starting points to any m
different points on the boundary. For example, the grid in Figure 26.11(a) has an escape, but
the grid in Figure 26.11(b) does not.
a. Consider a flow network in which vertices, as well as edges, have capacities. That is,
the total positive flow entering any given vertex is subject to a capacity constraint.
Show that determining the maximum flow in a network with edge and vertex
capacities can be reduced to an ordinary maximum-flow problem on a flow network of
comparable size.
b. Describe an efficient algorithm to solve the escape problem, and analyze its running
time.

Problems 26-2: Minimum path cover
A path cover of a directed graph G = (V, E) is a set P of vertex-disjoint paths such that every
vertex in V is included in exactly one path in P. Paths may start and end anywhere, and they
may be of any length, including 0. A minimum path cover of G is a path cover containing the
fewest possible paths.
a. Give an efficient algorithm to find a minimum path cover of a directed acyclic graph
G = (V, E). (Hint: Assuming that V = {1, 2, . . . ,n}, construct the graph G' = (V', E'),
where
V = {x0, x1, . . . ,xn} {y0, y1, . . . ,yn} ,
E' = {(x0, xi) : i V} {(yi, y0) : i V}

{(xi, yj) : (i, j)

E} ,

b. and run a maximum-flow algorithm.)
c. Does your algorithm work for directed graphs that contain cycles? Explain.

