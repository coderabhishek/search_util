The Ford-Fulkerson method repeatedly augments the flow along augmenting paths until a
maximum flow has been found. The max-flow min-cut theorem, which we shall prove
shortly, tells us that a flow is maximum if and only if its residual network contains no
augmenting path. To prove this theorem, though, we must first explore the notion of a cut of a
flow network.
A cut (S, T) of flow network G = (V, E) is a partition of V into S and T = V - S such that s S
and t T. (This definition is similar to the definition of "cut" that we used for minimum
spanning trees in Chapter 23, except that here we are cutting a directed graph rather than an
undirected graph, and we insist that s S and t T.) If f is a flow, then the net flow across
the cut (S, T) is defined to be f(S, T). The capacity of the cut (S, T) is c(S, T). A minimum cut
of a network is a cut whose capacity is minimum over all cuts of the network.
Figure 26.4 shows the cut ({s, v1, v2}, {v3, v4, t}) in the flow network of Figure 26.1(b). The
net flow across this cut is
f(v1, v3) + f(v2, v3) + f(v2, v4) = 12 + (-4) + 11
= 19,
and its capacity is
c(v1, v3) + c(v2, v4) = 12 + 14
= 26.

Figure 26.4: A cut (S, T) in the flow network of Figure 26.1(b), where S = {s, v1, v2} and T =
{v3, v4, t}. The vertices in S are black, and the vertices in T are white. The net flow across (S,
T) is f(S, T) = 19, and the capacity is c(S, T) = 26.
Observe that the net flow across a cut can include negative flows between vertices, but that
the capacity of a cut is composed entirely of nonnegative values. In other words, the net flow
across a cut (S, T) consists of positive flows in both directions; positive flow from S to T is
added while positive flow from T to S is subtracted. On the other hand, the capacity of a cut
(S, T) is computed only from edges going from S to T. Edges going from T to S are not
included in the computation of c(S, T).
The following lemma shows that the net flow across any cut is the same, and it equals the
value of the flow.
Lemma 26.5

