1. Since there are O(lg n) nodes on the traversed path, the additional cost of maintaining the
size fields is O(lg n).
In the second phase, the only structural changes to the underlying red-black tree are caused by
rotations, of which there are at most two. Moreover, a rotation is a local operation: only two
nodes have their size fields invalidated. The link around which the rotation is performed is
incident on these two nodes. Referring to the code for LEFT-ROTATE(T, x) in Section 13.2,
we add the following lines:
12 size[y] ← size[x]
13 size[x] ← size[left[x]] + size[right[x]] + 1
Figure 14.2 illustrates how the fields are updated. The change to RIGHT-ROTATE is
symmetric.

Figure 14.2: Updating subtree sizes during rotations. The link around which the rotation is
performed is incident on the two nodes whose size fields need to be updated. The updates are
local, requiring only the size information stored in x, y, and the roots of the subtrees shown as
triangles.
Since at most two rotations are performed during insertion into a red-black tree, only O(1)
additional time is spent updating size fields in the second phase. Thus, the total time for
insertion into an n-node order-statistic tree is O(lg n), which is asymptotically the same as for
an ordinary red-black tree.
Deletion from a red-black tree also consists of two phases: the first operates on the underlying
search tree, and the second causes at most three rotations and otherwise performs no structural
changes. (See Section 13.4.) The first phase splices out one node y. To update the subtree
sizes, we simply traverse a path from node y up to the root, decrementing the size field of each
node on the path. Since this path has length O(lg n) in an n-node red-black tree, the additional
time spent maintaining size fields in the first phase is O(lg n). The O(1) rotations in the
second phase of deletion can be handled in the same manner as for insertion. Thus, both
insertion and deletion, including the maintenance of the size fields, take O(lg n) time for an nnode order-statistic tree.
Exercises 14.1-1
Show how OS-SELECT(T, 10) operates on the red-black tree T of Figure 14.1.

Exercises 14.1-2

