Give an efficient algorithm for determining whether or not a given number a is a
quadratic residue modulo p. Analyze the efficiency of your algorithm.
c. Prove that if p is a prime of the form 4k + 3 and a is a quadratic residue in , then ak+1
mod p is a square root of a, modulo p. How much time is required to find the square
root of a quadratic residue a modulo p?
d. Describe an efficient randomized algorithm for finding a nonquadratic residue,
modulo an arbitrary prime p, that is, a member of that is not a quadratic residue.
How many arithmetic operations does your algorithm require on average?

Chapter notes
Niven and Zuckerman [231] provide an excellent introduction to elementary number theory.
Knuth [183] contains a good discussion of algorithms for finding the greatest common
divisor, as well as other basic number-theoretic algorithms. Bach [28] and Riesel [258]
provide more recent surveys of computational number theory. Dixon [78] gives an overview
of factorization and primality testing. The conference proceedings edited by Pomerance [245]
contains several excellent survey articles. More recently, Bach and Shallit [29] have provided
an exceptional overview of the basics of computational number theory.
Knuth [183] discusses the origin of Euclid's algorithm. It appears in Book 7, Propositions 1
and 2, of the Greek mathematician Euclid's Elements, which was written around 300 B.C.
Euclid's description may have been derived from an algorithm due to Eudoxus around 375
B.C. Euclid's algorithm may hold the honor of being the oldest nontrivial algorithm; it is
rivaled only by an algorithm for multiplication which was known to the ancient Egyptians.
Shallit [274] chronicles the history of the analysis of Euclid's algorithm.
Knuth attributes a special case of the Chinese remainder theorem (Theorem 31.27) to the
Chinese mathematician Sun-Ts u, who lived sometime between 200 B.C. and A.D. 200-the
date is quite uncertain. The same special case was given by the Greek mathematician
Nichomachus around A.D. 100. It was generalized by Chhin Chiu-Shao in 1247. The Chinese
remainder theorem was finally stated and proved in its full generality by L. Euler in 1734.
The randomized primality-testing algorithm presented here is due to Miller [221] and Rabin
[254]; it is the fastest randomized primality-testing algorithm known, to within constant
factors. The proof of Theorem 31.39 is a slight adaptation of one suggested by Bach [27]. A
proof of a stronger result for MILLER-RABIN was given by Monier [224, 225].
Randomization appears to be necessary to obtain a polynomial-time primality-testing
algorithm. The fastest deterministic primality-testing algorithm known is the Cohen-Lenstra
version [65] of the primality test by Adleman, Pomerance, and Rumely [3]. When testing a
number n of length ⌈lg(n + 1)⌉ for primality, it runs in (lg n)O(lg lg lg n) time, which is just
slightly superpolynomial.
The problem of finding large "random" primes is nicely discussed in an article by
Beauchemin, Brassard, Crépeau, Goutier, and Pomerance [33].
The concept of a public-key cryptosystem is due to Diffie and Hellman [74]. The RSA
cryptosystem was proposed in 1977 by Rivest, Shamir, and Adleman [259]. Since then, the
field of cryptography has blossomed. Our understanding of the RSA cryptosystem has

