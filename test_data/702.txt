It remains to show that SIMPLEX terminates, and when it does terminate, the solution
returned is optimal. Section 29.4 will address optimality. We now discuss termination.
Termination
In the example given in the beginning of this section, each iteration of the simplex algorithm
increased the objective value associated with the basic solution. As Exercise 29.3-2 asks you
to show, no iteration of SIMPLEX can decrease the objective value associated with the basic
solution. Unfortunately, it is possible that an iteration leaves the objective value unchanged.
This phenomenon is called degeneracy and we now study it in greater detail.
in line 13 of PIVOT. Since
The objective value is changed by the assignment
SIMPLEX calls PIVOT only when ce > 0, the only way for the objective value to remain
unchanged (i.e.,
) is for to be 0. This value is assigned as
in line 2 of PIVOT.
Since we always call PIVOT with ale â‰  0, we see that for to equal 0, and hence the objective
value to be unchanged, we must have bl = 0.
Indeed, this situation can occur. Consider the linear program
x1 + x2 + x3
z=
x4 = 8 - x1 - x2
x5 =
x2 - x3 .
Suppose that we choose x1 as the entering variable and x4 as the leaving variable. After
pivoting, we obtain
+ x3 - x4
z=8
x1 = 8 - x2
- x4
x5 =
x2 - x3 .
At this point, our only choice is to pivot with x3 entering and x5 leaving. Since b5 = 0, the
objective value of 8 remains unchanged after pivoting:
z = 8 + x2 - x4 - x5
x1 = 8 - x2 - x4
x2
- x5 .
x3 =
The objective value has not changed, but our representation has. Fortunately, if we pivot
again, with x2 entering and x1 leaving, the objective value will increase, and the simplex
algorithm can continue.
We now show that degeneracy is the only thing that could possibly keep the simplex
algorithm from terminating. Recall our assumption that SIMPLEX chooses indices e and l, in
lines 3 and 8 respectively, according to some deterministic rule. We say that SIMPLEX cycles
if the slack forms at two different iterations are identical, in which case, since SIMPLEX is a
deterministic algorithm, it will cycle through the same series of slack forms forever.
Lemma 29.5

