search have their correct breadth-first distances. Dijkstra's algorithm is like Prim's algorithm
in that both algorithms use a min-priority queue to find the "lightest" vertex outside a given
set (the set S in Dijkstra's algorithm and the tree being grown in Prim's algorithm), add this
vertex into the set, and adjust the weights of the remaining vertices outside the set
accordingly.
Exercises 24.3-1
Run Dijkstra's algorithm on the directed graph of Figure 24.2, first using vertex s as the
source and then using vertex z as the source. In the style of Figure 24.6, show the d and π
values and the vertices in set S after each iteration of the while loop.

Exercises 24.3-2
Give a simple example of a directed graph with negative-weight edges for which Dijkstra's
algorithm produces incorrect answers. Why doesn't the proof of Theorem 24.6 go through
when negative-weight edges are allowed?

Exercises 24.3-3
Suppose we change line 4 of Dijkstra's algorithm to the following.
4 while |Q| > 1
This change causes the while loop to execute |V | - 1 times instead of |V | times. Is this
proposed algorithm correct?

Exercises 24.3-4
We are given a directed graph G = (V, E) on which each edge (u, v) E has an associated
value r(u, v), which is a real number in the range 0 ≤ r(u, v) ≤ 1 that represents the reliability
of a communication channel from vertex u to vertex v. We interpret r(u, v) as the probability
that the channel from u to v will not fail, and we assume that these probabilities are
independent. Give an efficient algorithm to find the most reliable path between two given
vertices.

Exercises 24.3-5

