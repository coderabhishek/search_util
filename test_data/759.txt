5
6

do print (x0 + i(n/d)) mod n
else print "no solutions"

As an example of the operation of this procedure, consider the equation 14x ≡ 30 (mod 100)
(here, a = 14, b = 30, and n = 100). Calling EXTENDED-EUCLID in line 1, we obtain (d, x,
y) = (2, -7, 1). Since 2 | 30, lines 3–5 are executed. In line 3, we compute x0 = (-7)(15) mod
100 = 95. The loop on lines 4–5 prints the two solutions 95 and 45.
The procedure MODULAR-LINEAR-EQUATION-SOLVER works as follows. Line 1
computes d = gcd(a, n) as well as two values x′ and y′ such that d = ax′+ny′, demonstrating
that x′ is a solution to the equation ax′ ≡ d (mod n). If d does not divide b, then the equation ax
≡ b (mod n) has no solution, by Corollary 31.21. Line 2 checks if d | b; if not, line 6 reports
that there are no solutions. Otherwise, line 3 computes a solution x0 to ax ≡ b (mod n), in
accordance with Theorem 31.23. Given one solution, Theorem 31.24 states that the other d - 1
solutions can be obtained by adding multiples of (n/d), modulo n. The for loop of lines 4–5
prints out all d solutions, beginning with x0 and spaced (n/d) apart, modulo n.
MODULAR-LINEAR-EQUATION-SOLVER performs O(lg n + gcd(a, n)) arithmetic
operations, since EXTENDED-EUCLID performs O(lg n) arithmetic operations, and each
iteration of the for loop of lines 4–5 performs a constant number of arithmetic operations.
The following corollaries of Theorem 31.24 give specializations of particular interest.
Corollary 31.25
For any n > 1, if gcd(a, n) = 1, then the equation ax ≡ b (mod n) has a unique solution, modulo
n.

If b = 1, a common case of considerable interest, the x we are looking for is a multiplicative
inverse of a, modulo n.
Corollary 31.26
For any n > 1, if gcd(a, n) = 1, then the equation ax ≡ 1 (mod n) has a unique solution, modulo
n. Otherwise, it has no solution.

Corollary 31.26 allows us to use the notation (a-1 mod n) to refer to the multiplicative inverse
of a, modulo n, when a and n are relatively prime. If gcd(a, n) = 1, then one solution to the
equation ax ≡ 1 (mod n) is the integer x returned by EXTENDED-EUCLID, since the
equation
gcd(a, n) = 1 = ax + ny

