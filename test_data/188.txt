We sometimes represent rooted trees in other ways. In Chapter 6, for example, we represented
a heap, which is based on a complete binary tree, by a single array plus an index. The trees
that appear in Chapter 21 are traversed only toward the root, so only the parent pointers are
present; there are no pointers to children. Many other schemes are possible. Which scheme is
best depends on the application.
Exercises 10.4-1
Draw the binary tree rooted at index 6 that is represented by the following fields.
index key left righ
t
1
2
3
4
5
6
7
8
9
10

12
15
4
10
2
18
7
14
21
5

7
8
10
5
NIL
1
NIL
6
NIL
NIL

3
NIL
NIL
9
NIL
4
NIL
2
NIL
NIL

Exercises 10.4-2
Write an O(n)-time recursive procedure that, given an n-node binary tree, prints out the key of
each node in the tree.

Exercises 10.4-3
Write an O(n)-time nonrecursive procedure that, given an n-node binary tree, prints out the
key of each node in the tree. Use a stack as an auxiliary data structure.

Exercises 10.4-4
Write an O(n)-time procedure that prints all the keys of an arbitrary rooted tree with n nodes,
where the tree is stored using the left-child, right-sibling representation.

