Lemma 21.8
For every node x, and for all operation counts q, we have
0 ≤ φq(x) ≤ α(n) · rank[x].
Proof If x is a root or rank[x] = 0, then φq(x) = α(n) · rank[x] by definition. Now suppose that
x is not a root and that rank[x] ≥ 1. We obtain a lower bound on φq(x) by maximizing level(x)
and iter(x). By the bound (21.1), level(x) ≤ α(n) - 1, and by the bound (21.2), iter(x) ≤ rank[x].
Thus,
φq(x) ≥ (α(n) - (α(n) - 1)) · rank[x] - rank[x]
= rank[x] - rank[x]
= 0.
Similarly, we obtain an upper bound on φq(x) by minimizing level(x) and iter(x). By the bound
(21.1), level(x) ≥ 0, and by the bound (21.2), iter(x) ≥ 1. Thus,
φq(x) ≤ (α(n) - 0) · rank[x] 1
= α(n) · rank[x] - 1
< α(n) · rank[x].

Potential changes and amortized costs of operations
We are now ready to examine how the disjoint-set operations affect node potentials. With an
understanding of the change in potential due to each operation, we can determine each
operation's amortized cost.
Lemma 21.9
Let x be a node that is not a root, and suppose that the qth operation is either a LINK or
FIND-SET. Then after the qth operation, φq(x) ≤ φq-1(x). Moreover, if rank[x] ≥ 1 and either
level(x) or iter(x) changes due to the qth operation, then φq(x) ≤ φq-1(x) - 1. That is, x's
potential cannot increase, and if it has positive rank and either level(x) or iter(x) changes, then
x's potential drops by at least 1.
Proof Because x is not a root, the qth operation does not change rank[x], and because n does
not change after the initial n MAKE-SET operations, α(n) remains unchanged as well. Hence,
these components of the formula for x's potential remain the same after the qth operation. If
rank[x] = 0, then φq(x) = φq-1(x) = 0. Now assume that rank[x] ≥ 1.
Recall that level(x) monotonically increases over time. If the qth operation leaves level(x)
unchanged, then iter(x) either increases or remains unchanged. If both level(x) and iter(x) are

