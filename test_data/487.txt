Exercises 23.2-5
Suppose that all edge weights in a graph are integers in the range from 1 to |V|. How fast can
you make Prim's algorithm run? What if the edge weights are integers in the range from 1 to
W for some constant W?

Exercises 23.2-6: ⋆
Suppose that the edge weights in a graph are uniformly distributed over the half-open interval
[0, 1). Which algorithm, Kruskal's or Prim's, can you make run faster?

Exercises 23.2-7: ⋆
Suppose that a graph G has a minimum spanning tree already computed. How quickly can the
minimum spanning tree be updated if a new vertex and incident edges are added to G?

Exercises 23.2-8
Professor Toole proposes a new divide-and-conquer algorithm for computing minimum
spanning trees, which goes as follows. Given a graph G = (V, E), partition the set V of vertices
into two sets V1 and V2 such that |V1| and |V2| differ by at most 1. Let E1 be the set of edges
that are incident only on vertices in V1, and let E2 be the set of edges that are incident only on
vertices in V2. Recursively solve a minimum-spanning-tree problem on each of the two
subgraphs G1 = (V1, E1) and G2 = (V2, E2). Finally, select the minimum-weight edge in E that
crosses the cut (V1, V2), and use this edge to unite the resulting two minimum spanning trees
into a single spanning tree.
Either argue that the algorithm correctly computes a minimum spanning tree of G, or provide
an example for which the algorithm fails.

Problems 23-1: Second-best minimum spanning tree
Let G = (V, E) be an undirected, connected graph with weight function w : E → R, and
suppose that |E| ≥ |V| and all edge weights are distinct.

