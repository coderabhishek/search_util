c'(u, v) = c'(v, u) = (c(u, v) + c(v, u))/2 .
For each vertex u

V, we set

c' (s', u) = max(0, (c(V, u) - c(u, V))/2)
and
c'(u, t') = max(0, (c(u, V) - c(V, u))/2) .
We also set c'(s, t) = c'(t, s) = ∞.
b. Prove that if a feasible flow exists in G, then all capacities in G' are nonnegative and a
maximum flow exists in G' such that all edges into the sink t' are saturated.
c. Prove the converse of part (b). Your proof should be constructive, that is, given a flow
in G' that saturates all the edges into t', your proof should show how to obtain a
feasible flow in G.
d. Describe an algorithm that finds a maximum feasible flow in G. Denote by MF(|V|,
|E|) the worst-case running time of an ordinary maximum flow algorithm on a graph
with |V| vertices and |E| edges. Analyze your algorithm for computing the maximum
flow of a flow network with negative capacities in terms of MF.

Problem 26-7: The Hopcroft-Karp bipartite matching algorithm
In this problem, we describe a faster algorithm, due to Hopcroft and Karp, for finding a
time. Given an
maximum matching in a bipartite graph. The algorithm runs in
undirected, bipartite graph G = (V, E), where V = L R and all edges have exactly one
endpoint in L, let M be a matching in G. We say that a simple path P in G is an augmenting
path with respect to M if it starts at an unmatched vertex in L, ends at an unmatched vertex in
R, and its edges belong alternately to M and E - M. (This definition of an augmenting path is
related to, but different from, an augmenting path in a flow network.) In this problem, we treat
a path as a sequence of edges, rather than as a sequence of vertices. A shortest augmenting
path with respect to a matching M is an augmenting path with a minimum number of edges.
Given two sets A and B, the symmetric difference A
the elements that are in exactly one of the two sets.

B is defined as (A-B)

(B - A), that is,

a. Show that if M is a matching and P is an augmenting path with respect to M, then the
symmetric difference M P is a matching and |M P| = |M| + 1. Show that if P1, P2, .
. . ,Pk are vertex-disjoint augmenting paths with respect to M, then the symmetric
difference M (P1 P2 ··· Pk) is a matching with cardinality |M| + k.
The general structure of our algorithm is the following:
HOPCROFT-KARP (G)
1 M ← ø
2 repeat
3
let

be a maximum set of vertex-disjoint

