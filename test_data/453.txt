Suppose that during the execution of BFS on a graph G = (V, E), the queue Q contains the
vertices v1, v2,..., vr , where v1 is the head of Q and vr is the tail. Then, d[vr] ≤ d[v1] + 1 and
d[vi ] ≤ d[vi+1] for i = 1, 2,..., r - 1.
Proof The proof is by induction on the number of queue operations. Initially, when the queue
contains only s, the lemma certainly holds.
For the inductive step, we must prove that the lemma holds after both dequeuing and
enqueuing a vertex. If the head v1 of the queue is dequeued, v2 becomes the new head. (If the
queue becomes empty, then the lemma holds vacuously.) By the inductive hypothesis, d[v1] ≤
d[v2]. But then we have d[vr] ≤ d[v1] + 1 ≤ d[v2] + 1, and the remaining inequalities are
unaffected. Thus, the lemma follows with v2 as the head.
Enqueuing a vertex requires closer examination of the code. When we enqueue a vertex v in
line 17 of BFS, it becomes vr+1. At that time, we have already removed vertex u, whose
adjacency list is currently being scanned, from the queue Q, and by the inductive hypothesis,
the new head v1 has d[v1] ≥ d[u]. Thus, d[vr+1] = d[v] = d[u] + 1 ≤ d[v1] + 1. From the
inductive hypothesis, we also have d[vr] ≤ d[u] + 1, and so d[vr] ≤ d[u] + 1 = d[v] = d[vr+1],
and the remaining inequalities are unaffected. Thus, the lemma follows when v is enqueued.

The following corollary shows that the d values at the time that vertices are enqueued are
monotonically increasing over time.
Corollary 22.4
Suppose that vertices vi and vj are enqueued during the execution of BFS, and that vi is
enqueued before vj. Then d[vi] ≤ d[vj] at the time that vj is enqueued.
Proof Immediate from Lemma 22.3 and the property that each vertex receives a finite d value
at most once during the course of BFS.

We can now prove that breadth-first search correctly finds shortest-path distances.
Theorem 22.5: (Correctness of breadth-first search)
Let G = (V, E) be a directed or undirected graph, and suppose that BFS is run on G from a
given source vertex s V . Then, during its execution, BFS discovers every vertex v V that
is reachable from the source s, and upon termination, d[v] = δ(s, v) for all v V . Moreover,
for any vertex v ≠ s that is reachable from s, one of the shortest paths from s to v is a shortest
path from s to π[v] followed by the edge (π[v], v).

