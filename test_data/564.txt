Let u and v be vertices in V that are connected by an edge in E. Since augmenting paths are
shortest paths, when (u, v) is critical for the first time, we have
δf(s, v) = δf (s, u) + 1.
Once the flow is augmented, the edge (u, v) disappears from the residual network. It cannot
reappear later on another augmenting path until after the flow from u to v is decreased, which
occurs only if (v, u) appears on an augmenting path. If f' is the flow in G when this event
occurs, then we have
δf'(s, u) = δf'(s, v) + 1.
Since δf(s, v) ≤ δf'(s, v) by Lemma 26.8, we have
δf'(s, u) = δf'(s, v) + 1
≥ δf(s, v) + 1
= δf(s, u) + 2.
Consequently, from the time (u, v) becomes critical to the time when it next becomes critical,
the distance of u from the source increases by at least 2. The distance of u from the source is
initially at least 0. The intermediate vertices on a shortest path from s to u cannot contain s, u,
or t (since (u, v) on the critical path implies that u ≠ t). Therefore, until u becomes unreachable
from the source, if ever, its distance is at most |V| - 2. Thus, (u, v) can become critical at most
(|V|-2)/2 = |V|/2-1 times. Since there are O(E) pairs of vertices that can have an edge between
them in a residual graph, the total number of critical edges during the entire execution of the
Edmonds-Karp algorithm is O(V E). Each augmenting path has at least one critical edge, and
hence the theorem follows.

Since each iteration of FORD-FULKERSON can be implemented in O(E) time when the
augmenting path is found by breadth-first search, the total running time of the Edmonds-Karp
algorithm is O(V E2). We shall see that push-relabel algorithms can yield even better bounds.
The algorithm of Section 26.4 gives a method for achieving an O(V2 E) running time, which
forms the basis for the O(V3)-time algorithm of Section 26.5.
Exercises 26.2-1
In Figure 26.1(b), what is the flow across the cut ({s, v2, v4}, {v1, v3, t})? What is the capacity
of this cut?

Exercises 26.2-2
Show the execution of the Edmonds-Karp algorithm on the flow network of Figure 26.1(a).

