If event point q is not processed by ANY-SEGMENTS-INTERSECT, the procedure must
have returned before processing all event points. This situation could have occurred only if
ANY-SEGMENTS-INTERSECT had already found an intersection and returned TRUE.
Thus, if there is an intersection, ANY-SEGMENTS-INTERSECT returns TRUE. As we have
already seen, if ANY-SEGMENTS-INTERSECT returns TRUE, there is an intersection.
Therefore, ANY-SEGMENTS-INTERSECT always returns a correct answer.
Running time
If there are n segments in set S, then ANY-SEGMENTS-INTERSECT runs in time O(n lg n).
Line 1 takes O(1) time. Line 2 takes O(n lg n) time, using merge sort or heapsort. Since there
are 2n event points, the for loop of lines 3-11 iterates at most 2n times. Each iteration takes
O(lg n) time, since each red-black-tree operation takes O(lg n) time and, using the method of
Section 33.1, each intersection test takes O(1) time. The total time is thus O(n lg n).
Exercises 33.2-1
Show that there may be Î˜(n2) intersections in a set of n line segments.

Exercises 33.2-2
Given two segments a and b that are comparable at x, show how to determine in O(1) time
which of a >x b or b >x a holds. Assume that neither segment is vertical. (Hint: If a and b do
not intersect, you can just use cross products. If a and b intersect-which you can of course
determine using only cross products-you can still use only addition, subtraction, and
multiplication, avoiding division. Of course, in the application of the >x relation used here, if
a and b intersect, we can just stop and declare that we have found an intersection.)

Exercises 33.2-3
Professor Maginot suggests that we modify ANY-SEGMENTS-INTERSECT so that instead
of returning upon finding an intersection, it prints the segments that intersect and continues on
to the next iteration of the for loop. The professor calls the resulting procedure PRINTINTERSECTING-SEGMENTS and claims that it prints all intersections, from left to right, as
they occur in the set of line segments. Show that the professor is wrong on two counts by
giving a set of segments for which the first intersection found by PRINT-INTERSECTINGSEGMENTS is not the leftmost one and a set of segments for which PRINTINTERSECTING-SEGMENTS fails to find all the intersections.

Exercises 33.2-4

