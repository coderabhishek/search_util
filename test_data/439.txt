•

Because y is a root prior to the LINK, φq-1(y) = α(n) · rank[y]. The LINK operation
leaves y as a root, and it either leaves y's rank alone or it increases y's rank by 1.
Therefore, either φq(y) = φq-1(y) or φq(y) = φq-1(y) + α(n).

The increase in potential due to the LINK operation, therefore, is at most α(n). The amortized
cost of the LINK operation is O(1) + α(n) = O(α(n)).

Lemma 21.12
The amortized cost of each FIND-SET operation is O(α(n)).
Proof Suppose that the qth operation is a FIND-SET and that the find path contains s nodes.
The actual cost of the FIND-SET operation is O(s). We shall show that no node's potential
increases due to the FIND-SET and that at least max(0, s - (α(n) + 2)) nodes on the find path
have their potential decrease by at least 1.
To see that no node's potential increases, we first appeal to Lemma 21.9 for all nodes other
than the root. If x is the root, then its potential is α(n) · rank[x], which does not change.
Now we show that at least max(0, s - (α(n) + 2)) nodes have their potential decrease by at
least 1. Let x be a node on the find path such that rank[x] > 0 and x is followed somewhere on
the find path by another node y that is not a root, where level(y) = level(x) just before the
FIND-SET operation. (Node y need not immediately follow x on the find path.) All but at
most α(n) + 2 nodes on the find path satisfy these constraints on x. Those that do not satisfy
them are the first node on the find path (if it has rank 0), the last node on the path (i.e., the
root), and the last node w on the path for which level(w) = k, for each k = 0, 1, 2, ..., α(n) - 1.
Let us fix such a node x, and we shall show that x's potential decreases by at least 1. Let k =
level(x) = level(y). Just prior to the path compression caused by the FIND-SET, we have

Putting these inequalities together and letting i be the value of iter(x) before path compression,
we have

Because path compression will make x and y have the same parent, we know that after path
compression, rank[p[x]] = rank[p[y]] and that the path compression does not decrease
rank[p[y]]. Since rank[x] does not change, after path compression we have that
. Thus, path compression will cause either iter(x) to increase (to at least i

