punched in one of 12 places. The sorter can be mechanically "programmed" to examine a
given column of each card in a deck and distribute the card into one of 12 bins depending on
which place has been punched. An operator can then gather the cards bin by bin, so that cards
with the first place punched are on top of cards with the second place punched, and so on.
For decimal digits, only 10 places are used in each column. (The other two places are used for
encoding nonnumeric characters.) A d-digit number would then occupy a field of d columns.
Since the card sorter can look at only one column at a time, the problem of sorting n cards on
a d-digit number requires a sorting algorithm.
Intuitively, one might want to sort numbers on their most significant digit, sort each of the
resulting bins recursively, and then combine the decks in order. Unfortunately, since the cards
in 9 of the 10 bins must be put aside to sort each of the bins, this procedure generates many
intermediate piles of cards that must be kept track of. (See Exercise 8.3-5.)
Radix sort solves the problem of card sorting counterintuitively by sorting on the least
significant digit first. The cards are then combined into a single deck, with the cards in the 0
bin preceding the cards in the 1 bin preceding the cards in the 2 bin, and so on. Then the entire
deck is sorted again on the second-least significant digit and recombined in a like manner.
The process continues until the cards have been sorted on all d digits. Remarkably, at that
point the cards are fully sorted on the d-digit number. Thus, only d passes through the deck
are required to sort. Figure 8.3 shows how radix sort operates on a "deck" of seven 3-digit
numbers.

Figure 8.3: The operation of radix sort on a list of seven 3-digit numbers. The leftmost
column is the input. The remaining columns show the list after successive sorts on
increasingly significant digit positions. Shading indicates the digit position sorted on to
produce each list from the previous one.
It is essential that the digit sorts in this algorithm be stable. The sort performed by a card
sorter is stable, but the operator has to be wary about not changing the order of the cards as
they come out of a bin, even though all the cards in a bin have the same digit in the chosen
column.
In a typical computer, which is a sequential random-access machine, radix sort is sometimes
used to sort records of information that are keyed by multiple fields. For example, we might
wish to sort dates by three keys: year, month, and day. We could run a sorting algorithm with
a comparison function that, given two dates, compares years, and if there is a tie, compares
months, and if another tie occurs, compares days. Alternatively, we could sort the information
three times with a stable sort: first on day, next on month, and finally on year.

