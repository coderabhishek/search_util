Correctness of the prefix-function computation
We start with an essential lemma showing that by iterating the prefix function π, we can
enumerate all the prefixes Pk that are proper suffixes of a given prefix Pq. Let
π*[q] = {π[q], π(2)[q], π(3)[q], . . . , π(t)[q]},
where π(i)[q] is defined in terms of functional iteration, so that π(0)[q] = q and π(i+1)[q] =
π[π(i)[q]] for i ≥ 1, and where it is understood that the sequence in π*[q] stops when π(t)[q] = 0
is reached. The following lemma characterizes π*[q], as Figure 32.11 illustrates.
Lemma 32.5: (Prefix-function iteration lemma)
Let P be a pattern of length m with prefix function π. Then, for q = 1, 2, . . . , m, we have
π*[q] = {k : k < q and Pk ⊐ Pq}.
Proof We first prove that
(32.6)
If i

π*[q], then i = π(u)[q] for some u > 0. We prove equation (32.6) by induction on u. For u

= 1, we have i = π[q], and the claim follows since i < q and Pπ[q] ⊐ Pq. Using the relations π[i]
< i and Pπ[i] ⊐ Pi and the transitivity of < and ⊐ establishes the claim for all i in π*[q].
Therefore, π*[q]

{k : k < q and Pk ⊐ Pq}.

We prove that {k : k < q and Pk ⊐ Pq}

π*[q] by contradiction. Suppose to the contrary that

there is an integer in the set {k : k < q and Pk ⊐ Pq} - π*[q], and let j be the largest such value.
Because π[q] is the largest value in {k : k < q and Pk ⊐ Pq} and π[q] π*[q], we must have j
< π[q], and so we let j′ denote the smallest integer in π*[q] that is greater than j. (We can
choose j′ = π[q] if there is no other number in π*[q] that is greater than j.) We have Pj ⊐ Pq

because j {k : k < q and Pk ⊐ Pq}, and we have Pj′ ⊐ Pq because j′ π*[q]. Thus, Pj ⊐ Pj′
by Lemma 32.1, and j is the largest value less than j′ with this property. Therefore, we must
have π[j′] = j and, since j′ π*[q], we must have j π*[q] as well. This contradiction proves
the lemma.

The algorithm COMPUTE-PREFIX-FUNCTION computes π[q] in order for q = 1, 2, . . . , m.
The computation of π[1] = 0 in line 2 of COMPUTE-PREFIX-FUNCTION is certainly
correct, since π[q] < q for all q. The following lemma and its corollary will be used to prove
that COMPUTE-PREFIX-FUNCTION computes π[q] correctly for q > 1.
Lemma 32.6

