computing GT from G, for both the adjacency-list and adjacency-matrix representations of G.
Analyze the running times of your algorithms.

Exercises 22.1-4
Given an adjacency-list representation of a multigraph G = (V, E), describe an O(V + E)-time
algorithm to compute the adjacency-list representation of the "equivalent" undirected graph G′
= (V, E′), where E′ consists of the edges in E with all multiple edges between two vertices
replaced by a single edge and with all self-loops removed.

Exercises 22.1-5
The square of a directed graph G = (V, E) is the graph G2 = (V, E2) such that (u, w) E2 if
and only if for some v V , both (u, v) E and (v, w) E. That is, G2 contains an edge
between u and w whenever G contains a path with exactly two edges between u and w.
Describe efficient algorithms for computing G2 from G for both the adjacency-list and
adjacency-matrix representations of G. Analyze the running times of your algorithms.

Exercises 22.1-6
When an adjacency-matrix representation is used, most graph algorithms require time Ω(V2),
but there are some exceptions. Show that determining whether a directed graph G contains a
universal sink-a vertex with in-degree |V| - 1 and out-degree 0-can be determined in time
O(V), given an adjacency matrix for G.

Exercises 22.1-7
The incidence matrix of a directed graph G = (V, E) is a |V| × |E| matrix B = (bij) such that

Describe what the entries of the matrix product B BT represent, where BT is the transpose of B.

Exercises 22.1-8

