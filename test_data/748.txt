The EXTENDED-EUCLID procedure is a variation of the EUCLID procedure. Line 1 is
equivalent to the test "b = 0" in line 1 of EUCLID. If b = 0, then EXTENDED-EUCLID
returns not only d = a in line 2, but also the coefficients x = 1 and y = 0, so that a = ax + by. If
b ≠ 0, EXTENDED-EUCLID first computes (d′, x′, y′) such that d′= gcd(b, a mod b) and
(31.17)
As for EUCLID, we have in this case d = gcd(a, b) = d′ = gcd(b, a mod b). To obtain x and y
such that d = ax + by, we start by rewriting equation (31.17) using the equation d = d′ and
equation (3.8):
d = bx′ + (a - ⌊a/b⌋ b)y′
= ay′ + b(x′ - ⌊a/b⌋ y′).
Thus, choosing x = y′ and y = x′ - ⌊a/b⌋ y′ satisfies the equation d = ax + by, proving the
correctness of EXTENDED-EUCLID.
Since the number of recursive calls made in EUCLID is equal to the number of recursive calls
made in EXTENDED-EUCLID, the running times of EUCLID and EXTENDED-EUCLID
are the same, to within a constant factor. That is, for a > b > 0, the number of recursive calls is
O(lg b).
Exercises 31.2-1
Prove that equations (31.11) and (31.12) imply equation (31.13).

Exercises 31.2-2
Compute the values (d, x, y) that the call EXTENDED-EUCLID(899, 493) returns.

Exercises 31.2-3
Prove that for all integers a, k, and n,
gcd(a, n) = gcd(a + kn, n).

Exercises 31.2-4

