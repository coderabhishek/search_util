Exercises 18.2-2
Explain under what circumstances, if any, redundant DISK-READ or DISK-WRITE
operations are performed during the course of executing a call to B-TREE-INSERT. (A
redundant DISK-READ is a DISK-READ for a page that is already in memory. A redundant
DISK-WRITE writes to disk a page of information that is identical to what is already stored
there.)

Exercises 18.2-3
Explain how to find the minimum key stored in a B-tree and how to find the predecessor of a
given key stored in a B-tree.

Exercises 18.2-4: â‹†
Suppose that the keys {1, 2, ..., n} are inserted into an empty B-tree with minimum degree 2.
How many nodes does the final B-tree have?

Exercises 18.2-5
Since leaf nodes require no pointers to children, they could conceivably use a different
(larger) t value than internal nodes for the same disk page size. Show how to modify the
procedures for creating and inserting into a B-tree to handle this variation.

Exercises 18.2-6
Suppose that B-TREE-SEARCH is implemented to use binary search rather than linear search
within each node. Show that this change makes the CPU time required O(lg n), independently
of how t might be chosen as a function of n.

Exercises 18.2-7

