"discharging" it, that is, performing push and relabel operations until u no longer has a
positive excess. Whenever a vertex is relabeled, it is moved to the front of the list (hence the
name "relabel-to-front") and the algorithm begins its scan anew.
The correctness and analysis of the relabel-to-front algorithm depend on the notion of
"admissible" edges: those edges in the residual network through which flow can be pushed.
After proving some properties about the network of admissible edges, we shall investigate the
discharge operation and then present and analyze the relabel-to-front algorithm itself.
Admissible edges and networks
If G = (V, E) is a flow network with source s and sink t, f is a preflow in G, and h is a height
function, then we say that (u, v) is an admissible edge if cf(u, v) > 0 and h(u) = h(v) + 1.
Otherwise, (u, v) is inadmissible. The admissible network is Gf,h = (V, Ef,h), where Ef,h is the
set of admissible edges.
The admissible network consists of those edges through which flow can be pushed. The
following lemma shows that this network is a directed acyclic graph (dag).
Lemma 26.27: (The admissible network is acyclic)
If G = (V, E) is a flow network, f is a preflow in G, and h is a height function on G, then the
admissible network Gf,h = (V, Ef,h) is acyclic.
Proof The proof is by contradiction. Suppose that Gf,h contains a cycle p = v0, v1 , . . . ,vk ,
where v0 = vk and k > 0. Since each edge in p is admissible, we have h(vi-1) = h(vi) + 1 for i =
1, 2, . . . ,k. Summing around the cycle gives

Because each vertex in cycle p appears once in each of the summations, we derive the
contradiction that 0 = k.

The next two lemmas show how push and relabel operations change the admissible network.
Lemma 26.28
Let G = (V, E) be a flow network, let f be a preflow in G, and suppose that the attribute h is a
height function. If a vertex u is overflowing and (u, v) is an admissible edge, then PUSH(u, v)
applies. The operation does not create any new admissible edges, but it may cause (u, v) to
become inadmissible.

