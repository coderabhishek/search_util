Prove that applying a monotonically increasing function to a sorted sequence produces a
sorted sequence.

Exercises 27.2-2
Prove that a comparison network with n inputs correctly sorts the input sequence n, n - 1,...,
1 if and only if it correctly sorts the n - 1 zero-one sequences 1, 0, 0,..., 0, 0 , 1, 1, 0,...,
0, 0 ,..., 1, 1, 1,..., 1, 0 .

Exercises 27.2-3
Use the zero-one principle to prove that the comparison network shown in Figure 27.6 is a
sorting network.

Figure 27.6: A sorting network for sorting 4 numbers.
Exercises 27.2-4
State and prove an analog of the zero-one principle for a decision-tree model. (Hint: Be sure
to handle equality properly.)

Exercises 27.2-5
Prove that an n-input sorting network must contain at least one comparator between the ith
and (i + 1)st lines for all i = 1, 2,..., n - 1.

27.3 A bitonic sorting network
The first step in our construction of an efficient sorting network is to construct a comparison
network that can sort any bitonic sequence: a sequence that monotonically increases and then
monotonically decreases, or can be circularly shifted to become monotonically increasing and
then monotonically decreasing. For example, the sequences 1, 4, 6, 8, 3, 2 , 6, 9, 4, 2, 3,
5 , and 9, 8, 3, 2, 4, 6 are all bitonic. As a boundary condition, we say that any sequence

