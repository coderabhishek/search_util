(31.33)
(31.34)
for any message
. Transforming M with the two keys PA and SA successively, in either
order, yields the message M back.
In a public-key cryptosystem, it is essential that no one but Alice be able to compute the
function SA() in any practical amount of time. The privacy of mail that is encrypted and sent to
Alice and the authenticity of Alice's digital signatures rely on the assumption that only Alice
is able to compute SA(). This requirement is why Alice keeps SA secret; if she does not, she
loses her uniqueness and the cryptosystem cannot provide her with unique capabilities. The
assumption that only Alice can compute SA() must hold even though everyone knows PA and
can compute PA(), the inverse function to SA(), efficiently. The major difficulty in designing a
workable public-key cryptosystem is in figuring out how to create a system in which we can
reveal a transformation PA() without thereby revealing how to compute the corresponding
inverse transformation SA().
In a public-key cryptosystem, encryption works as shown in Figure 31.5. Suppose Bob wishes
to send Alice a message M encrypted so that it will look like unintelligible gibberish to an
eavesdropper. The scenario for sending the message goes as follows.

Figure 31.5: Encryption in a public key system. Bob encrypts the message M using Alice's
public key PA and transmits the resulting ciphertext C = PA(M) to Alice. An eavesdropper who
captures the transmitted ciphertext gains no information about M. Alice receives C and
decrypts it using her secret key to obtain the original message M = SA(C).
•
•
•

Bob obtains Alice's public key PA (from a public directory or directly from Alice).
Bob computes the ciphertext C = PA(M) corresponding to the message M and sends C
to Alice.
When Alice receives the ciphertext C, she applies her secret key SA to retrieve the
original message: M = SA(C).

Because SA() and PA() are inverse functions, Alice can compute M from C. Because only
Alice is able to compute SA(), Alice is the only one who can compute M from C. The
encryption of M using PA() has protected M from disclosure to anyone except Alice.
Digital signatures are similarly easy to implement within our formulation of a public-key
cryptosystem. (We note that there are other ways of approaching the problem of constructing
digital signatures, which we shall not go into here.) Suppose now that Alice wishes to send
Bob a digitally signed response M′. The digital-signature scenario proceeds as shown in
Figure 31.6.

