1
2
3
4
5

i ← l*
print "line " i ", station " n
for j ← n downto 2
do i ← li[j]
print "line " i ", station " j - 1

In the example of Figure 15.2, PRINT-STATIONS would produce the output
line 1, station 6
line 2, station 5
line 2, station 4
line 1, station 3
line 2, station 2
line 1, station 1
Exercises 15.1-1
Show how to modify the PRINT-STATIONS procedure to print out the stations in increasing
order of station number. (Hint: Use recursion.)

Exercises 15.1-2
Use equations (15.8) and (15.9) and the substitution method to show that ri(j), the number of
references made to fi[j] in a recursive algorithm, equals 2n - j.

Exercises 15.1-3
Using the result of Exercise 15.1-2, show that the total number of references to all fi[j] values,
or
, is exactly 2n+1 - 2.

Exercises 15.1-4
Together, the tables containing fi[j] and li[j] values contain a total of 4n - 2 entries. Show how
to reduce the space requirements to a total of 2n + 2 entries, while still computing f* and still
being able to print all the stations on a fastest way through the factory.

