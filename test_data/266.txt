Show how OS-RANK(T, x) operates on the red-black tree T of Figure 14.1 and the node x
with key[x] = 35.

Exercises 14.1-3
Write a nonrecursive version of OS-SELECT.

Exercises 14.1-4
Write a recursive procedure OS-KEY-RANK(T, k) that takes as input an order-statistic tree T
and a key k and returns the rank of k in the dynamic set represented by T . Assume that the
keys of T are distinct.

Exercises 14.1-5
Given an element x in an n-node order-statistic tree and a natural number i, how can the ith
successor of x in the linear order of the tree be determined in O(lg n) time?

Exercises 14.1-6
Observe that whenever the size field of a node is referenced in either OS-SELECT or OSRANK, it is used only to compute the rank of the node in the subtree rooted at that node.
Accordingly, suppose we store in each node its rank in the subtree of which it is the root.
Show how this information can be maintained during insertion and deletion. (Remember that
these two operations can cause rotations.)

Exercises 14.1-7
Show how to use an order-statistic tree to count the number of inversions (see Problem 2-4) in
an array of size n in time O(n lg n).

Exercises 14.1-8: â‹†

