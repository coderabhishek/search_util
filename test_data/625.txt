Exercises 27.3-5
Consider two sequences of 0's and 1's. Prove that if every element in one sequence is at least
as small as every element in the other sequence, then one of the two sequences is clean.

Exercises 27.3-6
Prove the following analog of the zero-one principle for bitonic sorting networks: a
comparison network that can sort any bitonic sequence of 0's and 1's can sort any bitonic
sequence of arbitrary numbers.

27.4 A merging network
Our sorting network will be constructed from merging networks, which are networks that can
merge two sorted input sequences into one sorted output sequence. We modify BITONICSORTER[n] to create the merging network MERGER[n]. As with the bitonic sorter, we shall
prove the correctness of the merging network only for inputs that are zero-one sequences.
Exercise 27.4-1 asks you to show how the proof can be extended to arbitrary input values.
The merging network is based on the following intuition. Given two sorted sequences, if we
reverse the order of the second sequence and then concatenate the two sequences, the
resulting sequence is bitonic. For example, given the sorted zero-one sequences X = 00000111
and Y = 00001111, we reverse Y to get YR= 11110000. Concatenating X and YR yields
0000011111110000, which is bitonic. Thus, to merge the two input sequences X and Y, it
suffices to perform a bitonic sort on X concatenated with YR.
We can construct MERGER[n] by modifying the first half-cleaner of BITONIC- SORTER[n].
The key is to perform the reversal of the second half of the inputs implicitly. Given two sorted
sequences a1, a2,...,an/2 and an/2+1, an/2+2,..., an to be merged, we want the effect of
bitonically sorting the sequence a1, a2,..., an/2, an, an-1,..., an/2+1 . Since the first half-cleaner
of BITONIC-SORTER[n] compares inputs i and n/2 + i, for i = 1, 2,..., n/2, we make the first
stage of the merging network compare inputs i and n - i + 1. Figure 27.10 shows the
correspondence. The only subtlety is that the order of the outputs from the bottom of the first
stage of MERGER[n] are reversed compared with the order of outputs from an ordinary halfcleaner. Since the reversal of a bitonic sequence is bitonic, however, the top and bottom
outputs of the first stage of the merging network satisfy the properties in Lemma 27.3, and
thus the top and bottom can be bitonically sorted in parallel to produce the sorted output of the
merging network.

