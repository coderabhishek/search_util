3 as well. In other words, x and y point to ("are") the same object after the assignment
y ← x.
Sometimes, a pointer will refer to no object at all. In this case, we give it the special
value NIL.
8. Parameters are passed to a procedure by value: the called procedure receives its own
copy of the parameters, and if it assigns a value to a parameter, the change is not seen
by the calling procedure. When objects are passed, the pointer to the data representing
the object is copied, but the object's fields are not. For example, if x is a parameter of a
called procedure, the assignment x ← y within the called procedure is not visible to the
calling procedure. The assignment f [x] ← 3, however, is visible.
9. The boolean operators "and" and "or" are short circuiting. That is, when we evaluate
the expression "x and y" we first evaluate x. If x evaluates to FALSE, then the entire
expression cannot evaluate to TRUE, and so we do not evaluate y. If, on the other
hand, x evaluates to TRUE, we must evaluate y to determine the value of the entire
expression. Similarly, in the expression "x or y" we evaluate the expression y only if x
evaluates to FALSE. Short-circuiting operators allow us to write boolean expressions
such as "x ≠ NIL and f[x] = y" without worrying about what happens when we try to
evaluate f[x] when x is NIL.
Exercises 2.1-1
Using Figure 2.2 as a model, illustrate the operation of INSERTION-SORT on the array A =
31, 41, 59, 26, 41, 58 .

Exercises 2.1-2
Rewrite the INSERTION-SORT procedure to sort into nonincreasing instead of
nondecreasing order.

Exercises 2.1-3
Consider the searching problem:
•
•

Input: A sequence of n numbers A = a1, a2, . . . , an and a value v.
Output: An index i such that v = A[i] or the special value NIL if v does not appear in
A.

Write pseudocode for linear search, which scans through the sequence, looking for v. Using a
loop invariant, prove that your algorithm is correct. Make sure that your loop invariant fulfills
the three necessary properties.

