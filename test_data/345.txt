di

4

2

4

3

1

4

6

wi

70

60

50

40

30

20

10

Figure 16.7: An instance of the problem of scheduling unit-time tasks with deadlines and penalties for
a single processor.
Exercises 16.5-1
Solve the instance of the scheduling problem given in Figure 16.7, but with each penalty
wi replaced by 80 - wi.

Exercises 16.5-2
Show how to use property 2 of Lemma 16.12 to determine in time O(|A|) whether or not a
given set A of tasks is independent.

Problems 16-1: Coin changing
Consider the problem of making change for n cents using the fewest number of coins.
Assume that each coin's value is an integer.
a. Describe a greedy algorithm to make change consisting of quarters,
dimes, nickels, and pennies. Prove that your algorithm yields an
optimal solution.
b. Suppose that the available coins are in the denominations that are
powers of c, i.e., the denominations are c0, c1, ..., ck for some integers
c >; 1 and k â‰¥ 1. Show that the greedy algorithm always yields an
optimal solution.
c. Give a set of coin denominations for which the greedy algorithm does
not yield an optimal solution. Your set should include a penny so that
there is a solution for every value of n.
d. Give an O(nk)-time algorithm that makes change for any set of k
different coin denominations, assuming that one of the coins is a
penny.

Problems 16-2: Scheduling to minimize average completion time
Suppose you are given a set S = {a1, a2, ..., an} of tasks, where task ai requires pi units of
processing time to complete, once it has started. You have one computer on which to run
these tasks, and the computer can run only one task at a time. Let ci be the completion
time of task ai , that is, the time at which task ai completes processing. Your goal is to
minimize the average completion time, that is, to minimize
. For example,
suppose there are two tasks, a1 and a2, with p1 = 3 and p2 = 5, and consider the schedule

