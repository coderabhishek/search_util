To prove the correctness of the Bellman-Ford algorithm, we start by showing that if there are
no negative-weight cycles, the algorithm computes correct shortest-path weights for all
vertices reachable from the source.
Lemma 24.2
Let G = (V, E) be a weighted, directed graph with source s and weight function w : E → R,
and assume that G contains no negative-weight cycles that are reachable from s. Then, after
the |V| - 1 iterations of the for loop of lines 2-4 of BELLMAN-FORD, we have d[v] = δ(s, v)
for all vertices v that are reachable from s.
Proof We prove the lemma by appealing to the path-relaxation property. Consider any vertex
v that is reachable from s, and let p = v0, v1,..., vk , where v0 = s and vk = v, be any acyclic
shortest path from s to v. Path p has at most |V| - 1 edges, and so k ≤ |V| - 1. Each of the |V| - 1
iterations of the for loop of lines 2-4 relaxes all E edges. Among the edges relaxed in the ith
iteration, for i = 1, 2,..., k, is (vi-1, vi). By the path-relaxation property, therefore, d[v] = d[vk] =
δ(s, vk) = δ(s, v).

Corollary 24.3
Let G = (V, E) be a weighted, directed graph with source vertex s and weight function w : E
→ R. Then for each vertex v V , there is a path from s to v if and only if BELLMAN-FORD
terminates with d[v] < ∞ when it is run on G.
Proof The proof is left as Exercise 24.1-2.

Theorem 24.4: (Correctness of the Bellman-Ford algorithm)
Let BELLMAN-FORD be run on a weighted, directed graph G = (V, E) with source s and
weight function w : E → R. If G contains no negative-weight cycles that are reachable from s,
then the algorithm returns TRUE, we have d[v] = δ(s, v) for all vertices v V , and the
predecessor subgraph Gπ is a shortest-paths tree rooted at s. If G does contain a negativeweight cycle reachable from s, then the algorithm returns FALSE.
Proof Suppose that graph G contains no negative-weight cycles that are reachable from the
source s. We first prove the claim that at termination, d[v] = δ(s, v) for all vertices v V . If
vertex v is reachable from s, then Lemma 24.2 proves this claim. If v is not reachable from s,
then the claim follows from the no-path property. Thus, the claim is proven. The predecessorsubgraph property, along with the claim, implies that Gπ is a shortest-paths tree. Now we use
the claim to show that BELLMAN-FORD returns TRUE. At termination, we have for all
edges (u, v) E, and so none of the tests in line 6 causes BELLMAN-FORD to return
FALSE. It therefore returns TRUE.

