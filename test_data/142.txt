(7.5)

c. Show that equation (7.5) simplifies to
(7.6)

d. Show that
(7.7)

e. (Hint: Split the summation into two parts, one for k = 1, 2,..., ⌈n/2⌉ - 1 and one for k =
⌈n/2⌉,..., n - 1.)
f. Using the bound from equation (7.7), show that the recurrence in equation (7.6) has
the solution E [T (n)] = Θ(n lg n). (Hint: Show, by substitution, that E[T (n)] ≤ an log
n - bn for some positive constants a and b.)

Problems 7-3: Stooge sort
Professors Howard, Fine, and Howard have proposed the following "elegant" sorting
algorithm:
STOOGE-SORT(A, i, j)
1 if A[i] > A[j]
2
then exchange A[i] ↔ A[j]
3 if i + 1 ≥ j
4
then return
5

k ← ⌊(j - i + 1)/3⌋

6

STOOGE-SORT(A, i, j - k)

7

STOOGE-SORT(A, i + k, j)

8

STOOGE-SORT(A, i, j - k)

▹ Round down.

▹ First two-thirds.

▹ Last two-thirds.

▹ First two-thirds again.

a. Argue that, if n = length[A], then STOOGE-SORT(A, 1, length[A]) correctly sorts the
input array A[1 n].
b. Give a recurrence for the worst-case running time of STOOGE-SORT and a tight
asymptotic (Θ-notation) bound on the worst-case running time.
c. Compare the worst-case running time of STOOGE-SORT with that of insertion sort,
merge sort, heapsort, and quicksort. Do the professors deserve tenure?

Problems 7-4: Stack depth for quicksort

