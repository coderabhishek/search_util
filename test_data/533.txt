7

return L(m)

In each iteration of the while loop of lines 4-6, we compute L(2m) = (L(m))2, starting with m = 1.
At the end of each iteration, we double the value of m. The final iteration computes L(n-1) by
actually computing L(2m) for some n - 1 ≤ 2m < 2n - 2. By equation (25.3), L(2m) = L(n-1). The
next time the test in line 4 is performed, m has been doubled, so now m ≥ n - 1, the test fails,
and the procedure returns the last matrix it computed.
The running time of FASTER-ALL-PAIRS-SHORTEST-PATHS is Θ(n3 lg n) since each of
the ⌈lg(n - 1)⌉ matrix products takes Θ(n3) time. Observe that the code is tight, containing no
elaborate data structures, and the constant hidden in the Θ-notation is therefore small.
Exercises 25.1-1
Run SLOW-ALL-PAIRS-SHORTEST-PATHS on the weighted, directed graph of Figure
25.2, showing the matrices that result for each iteration of the loop. Then do the same for
FASTER-ALL-PAIRS-SHORTEST-PATHS.

Figure 25.2: A weighted, directed graph for use in Exercises 25.1-1, 25.2-1, and 25.3-1.
Exercises 25.1-2
Why do we require that wii = 0 for all 1 ≤ i ≤ n?

Exercises 25.1-3
What does the matrix

