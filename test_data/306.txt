search is either successful (finding some key ki) or unsuccessful (finding some dummy key
di), and so we have

Figure 15.7: Two Binary Search Trees for a Set of n = 5 Keys with the Following
Probabilities:
i 0
1
2
3
4
5
0.15 0.10 0.05 0.10 0.20
pi
qi 0.05 0.10 0.05 0.05 0.05 0.10
(a) A binary search tree with expected search cost 2.80. (b) A binary search tree with
expected search cost 2.75. This tree is optimal.
(15.15)

Because we have probabilities of searches for each key and each dummy key, we can
determine the expected cost of a search in a given binary search tree T. Let us assume that the
actual cost of a search is the number of nodes examined, i.e., the depth of the node found by
the search in T, plus 1. Then the expected cost of a search in T is
(15.16)

where depthT denotes a node's depth in the tree T. The last equality follows from equation
(15.15). In Figure 15.7(a), we can calculate the expected search cost node by node:
node depth probability contribution
k1
k2
k3
k4
k5
d0
d1

1
0
2
1
2
2
2

0.15
0.10
0.05
0.10
0.20
0.05
0.10

0.30
0.10
0.15
0.20
0.60
0.15
0.30

