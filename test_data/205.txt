between pairs (a, b) with a ≠ = 0 and pairs (r, s) with r ≠ s. Thus, for any given pair of inputs
k and l, if we pick (a, b) uniformly at random from
, the resulting pair (r, s) is equally
likely to be any pair of distinct values modulo p.
It then follows that the probability that distinct keys k and l collide is equal to the probability
that r ≡ s (mod m) when r and s are randomly chosen as distinct values modulo p. For a given
value of r, of the p - 1 possible remaining values for s, the number of values s such that s ≠ r
and s ≡ r (mod m) is at most
⌈p/m⌉ - 1 ≤ ((p + m - 1)/m) - 1 (by inequality (3.7))
= (p - 1)/m.
The probability that s collides with r when reduced modulo m is at most ((p - 1)/m)/(p - 1) =
1/m.
Therefore, for any pair of distinct values k, l

Zp,

Pr{ha,b(k) = ha,b(l)} ≤ 1/m,
so that ℋp,m is indeed universal.

Exercises 11.3-1
Suppose we wish to search a linked list of length n, where each element contains a key k
along with a hash value h(k). Each key is a long character string. How might we take
advantage of the hash values when searching the list for an element with a given key?

Exercises 11.3-2
Suppose that a string of r characters is hashed into m slots by treating it as a radix-128 number
and then using the division method. The number m is easily represented as a 32-bit computer
word, but the string of r characters, treated as a radix-128 number, takes many words. How
can we apply the division method to compute the hash value of the character string without
using more than a constant number of words of storage outside the string itself?

Exercises 11.3-3
Consider a version of the division method in which h(k) = k mod m, where m = 2p - 1 and k is
a character string interpreted in radix 2p. Show that if string x can be derived from string y by

