for j = 1, 2, ..., n - 1. As Exercise 15.1-2 asks you to show, ri(j) = 2n-j. Thus, f1[1] alone is
referenced 2n-1 times! As Exercise 15.1-3 asks you to show, the total number of references to
all fi[j] values is Θ(2n).
We can do much better if we compute the fi[j] values in a different order from the recursive
way. Observe that for j ≥ 2, each value of fi[j] depends only on the values of f1[j - 1] and f2[j 1]. By computing the fi[j] values in order of increasing station numbers j—left to right in
Figure 15.2(b)—we can compute the fastest way through the factory, and the time it takes, in
Θ(n) time. The FASTEST-WAY procedure takes as input the values ai,j, ti,j, ei, and xi , as well
as n, the number of stations in each assembly line.
FASTEST-WAY(a, t, e, x, n)
1 f1[1] ← e1 + a1,1
2 f2[1] ←e2 + a2,1
3 for j ← 2 to n
4
do if f1[j - 1] + a1,j ≤
5
then f1[j] ← f1[j
6
l1[j] ← 1
7
else f1[j] ← f2[j
8
l1[j] ← 2
9
if f2[j - 1] + a2,j ≤
10
then f2[j] ← f2[j
11
l2[j] ← 2
12
else f2[j] ∞ f1[j
13
l2[j] ← 1
14 if f1[n] + x1 ≤ f2[n] + x2
15
then f* = f1[n] + x1
16
l* = 1
17
else f* = f2[n] + x2
18
l* = 2

f2[j - 1] + t2,j-1 + a1,j
- 1] + a1, j
- 1] + t2,j-1 + a1,j
f1[j - 1] + t1,j-1 + a2,j
- 1] + a2,j
- 1] + t1,j-1 + a2,j

FASTEST-WAY works as follows. Lines 1–2 compute f1[1] and f2[1] using equations (15.2)
and (15.3). Then the for loop of lines 3–13 computes fi[j] and li[j] for i = 1, 2 and j = 2, 3, ...,
n. Lines 4–8 compute f1[j] and l1[j] using equation (15.4), and lines 9–13 compute f2[j] and
l2[j] using equation (15.5). Finally, lines 14–18 compute f* and l* using equation (15.1).
Because lines 1–2 and 14–18 take constant time and each of the n - 1 iterations of the for loop
of lines 3–13 takes constant time, the entire procedure takes Θ(n) time.
One way to view the process of computing the values of fi[j] and li [j] is that we are filling in
table entries. Referring to Figure 15.2(b), we fill tables containing values fi[j] and li[j] from
left to right (and top to bottom within each column). To fill in an entry fi[j], we need the
values of f1[j - 1] and f2[j - 1] and, knowing that we have already computed and stored them,
we determine these values simply by looking them up in the table.
Step 4: Constructing the fastest way through the factory
Having computed the values of fi[j], f*, li[j], and l*, we need to construct the sequence of
stations used in the fastest way through the factory. We discussed above how to do so in the
example of Figure 15.2.
The following procedure prints out the stations used, in decreasing order of station number.
Exercise 15.1-1 asks you to modify it to print them in increasing order of station number.
PRINT-STATIONS(l, n)

