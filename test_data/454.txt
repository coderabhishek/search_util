Proof Assume, for the purpose of contradiction, that some vertex receives a d value not equal
to its shortest path distance. Let v be the vertex with minimum δ(s, v) that receives such an
incorrect d value; clearly v ≠ s. By Lemma 22.2, d[v] ≥ δ(s, v), and thus we have that d[v] >
δ(s, v). Vertex v must be reachable from s, for if it is not, then δ(s, v) = ∞ ≥ d[v]. Let u be the
vertex immediately preceding v on a shortest path from s to v, so that δ(s, v) = δ(s, u) + 1.
Because δ(s, u) < δ(s, v), and because of how we chose v, we have d[u] = δ(s, u). Putting these
properties together, we have
(22.1)
Now consider the time when BFS chooses to dequeue vertex u from Q in line 11. At this time,
vertex v is either white, gray, or black. We shall show that in each of these cases, we derive a
contradiction to inequality (22.1). If v is white, then line 15 sets d[v] = d[u] + 1, contradicting
inequality (22.1). If v is black, then it was already removed from the queue and, by Corollary
22.4, we have d[v] ≤ d[u], again contradicting inequality (22.1). If v is gray, then it was
painted gray upon dequeuing some vertex w, which was removed from Q earlier than u and
for which d[v] = d[w] + 1. By Corollary 22.4, however, d[w] ≤ d[u], and so we have d[v] ≤
d[u] + 1, once again contradicting inequality (22.1).
Thus we conclude that d[v] = δ(s, v) for all v V . All vertices reachable from s must be
discovered, for if they were not, they would have infinite d values. To conclude the proof of
the theorem, observe that if π[v] = u, then d[v] = d[u] + 1. Thus, we can obtain a shortest path
from s to v by taking a shortest path from s to π[v] and then traversing the edge (π[v], v).

Breadth-first trees
The procedure BFS builds a breadth-first tree as it searches the graph, as illustrated in Figure
22.3. The tree is represented by the π field in each vertex. More formally, for a graph G = (V,
E) with source s, we define the predecessor subgraph of G as Gπ = (Vπ, Eπ), where
Vπ = {v

V: π[v] ≠ NIL} {

s}

and
Eπ = {(π[v], v) : v

Vπ - {s}}.

The predecessor subgraph Gπ is a breadth-first tree if Vπ consists of the vertices reachable
from s and, for all v Vπ , there is a unique simple path from s to v in Gπ that is also a shortest
path from s to v in G. A breadth-first tree is in fact a tree, since it is connected and |Eπ| = |Vπ| 1 (see Theorem B.2). The edges in Eπ are called tree edges.
After BFS has been run from a source s on a graph G, the following lemma shows that the
predecessor subgraph is a breadth-first tree.
Lemma 22.6

