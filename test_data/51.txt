When x → 0, the approximation of ex by 1 + x is quite good:
ex = 1 + x + Θ(x2).
(In this equation, the asymptotic notation is used to describe the limiting behavior as x → 0
rather than as x → ∞.) We have for all x,
(3.13)
Logarithms
We shall use the following notations:
lg n = log2 n (binary logarithm) ,
ln n = loge n (natural logarithm) ,
lgk n = (lg n)k (exponentiation) ,
lg lg n = lg(lg n) (composition) .
An important notational convention we shall adopt is that logarithm functions will apply only
to the next term in the formula, so that lg n + k will mean (lg n) + k and not lg(n + k). If we
hold b > 1 constant, then for n > 0, the function logb n is strictly increasing.
For all real a > 0, b > 0, c > 0, and n,
(3.14)

(3.15)

where, in each equation above, logarithm bases are not 1.
By equation (3.14), changing the base of a logarithm from one constant to another only
changes the value of the logarithm by a constant factor, and so we shall often use the notation
"lg n" when we don't care about constant factors, such as in O-notation. Computer scientists
find 2 to be the most natural base for logarithms because so many algorithms and data
structures involve splitting a problem into two parts.
There is a simple series expansion for ln(1 + x) when |x| < 1:

