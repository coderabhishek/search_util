Exercises 21.3-3
Give a sequence of m MAKE-SET, UNION, and FIND-SET operations, n of which are
MAKE-SET operations, that takes Ω(m lg n) time when we use union by rank only.

Exercises 21.3-4: ⋆
Show that any sequence of m MAKE-SET, FIND-SET, and LINK operations, where all the
LINK operations appear before any of the FIND-SET operations, takes only O(m) time if both
path compression and union by rank are used. What happens in the same situation if only the
path-compression heuristic is used?

21.4

Analysis of union by rank with path compression

As noted in Section 21.3, the running time of the combined union-by-rank and pathcompression heuristic is O(m α (n)) for m disjoint-set operations on n elements. In this
section, we shall examine the function α to see just how slowly it grows. Then we prove this
running time using the potential method of amortized analysis.
A very quickly growing function and its very slowly growing inverse
For integers k ≥ 0 and j ≥ 1, we define the function Ak(j) as

where the expression
Specifically,
and
level of the function A.

uses the functional-iteration notation given in Section 3.2.
for i ≥ 1. We will refer to the parameter k as the

The function Ak(j) strictly increases with both j and k. To see just how quickly this function
grows, we first obtain closed-form expressions for A1(j) and A2(j).
Lemma 21.2
For any integer j ≥ 1, we have A1(j) = 2 j + 1.
Proof We first use induction on i to show that
. For the base case, we have
. For the inductive step, assume that
. Then
. Finally, we note that

.

