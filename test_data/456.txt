Argue that in a breadth-first search, the value d[u] assigned to a vertex u is independent of the
order in which the vertices in each adjacency list are given. Using Figure 22.3 as an example,
show that the breadth-first tree computed by BFS can depend on the ordering within
adjacency lists.

Exercises 22.2-5
Give an example of a directed graph G = (V, E), a source vertex s V , and a set of tree edges
Eπ E such that for each vertex v V, the unique path in the graph (V, Eπ) from s to v is a
shortest path in G, yet the set of edges Eπ cannot be produced by running BFS on G, no matter
how the vertices are ordered in each adjacency list.

Exercises 22.2-6
There are two types of professional wrestlers: "good guys" and "bad guys." Between any pair
of professional wrestlers, there may or may not be a rivalry. Suppose we have n professional
wrestlers and we have a list of r pairs of wrestlers for which there are rivalries. Give an O(n +
r)-time algorithm that determines whether it is possible to designate some of the wrestlers as
good guys and the remainder as bad guys such that each rivalry is between a good guy and a
bad guy. If is it possible to perform such a designation, your algorithm should produce it.

Exercises 22.2-7: ⋆
The diameter of a tree T =(V, E) is given by

that is, the diameter is the largest of all shortest-path distances in the tree. Give an efficient
algorithm to compute the diameter of a tree, and analyze the running time of your algorithm.

Exercises 22.2-8
Let G = (V, E) be a connected, undirected graph. Give an O(V + E)-time algorithm to compute
a path in G that traverses each edge in E exactly once in each direction. Describe how you can
find your way out of a maze if you are given a large supply of pennies.

