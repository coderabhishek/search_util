The Chinese remainder theorem has two major uses. Let the integer n be factored as n = n1n2
nk, where the factors ni are pairwise relatively prime. First, the Chinese remainder theorem is
a descriptive "structure theorem" that describes the structure of Zn as identical to that of the
Cartesian product
with componentwise addition and multiplication modulo ni in
the ith component. Second, this description can often be used to yield efficient algorithms,
since working in each of the systems can be more efficient (in terms of bit operations) than
working modulo n.
Theorem 31.27: (Chinese remainder theorem)
Let n = n1n2 nk, where the ni are pairwise relatively prime. Consider the correspondence
(31.23)
where a

Zn,

, and

ai = a mod ni
for i = 1, 2, ..., k. Then, mapping (31.23) is a one-to-one correspondence (bijection) between
Zn and the Cartesian product
. Operations performed on the elements of Zn can
be equivalently performed on the corresponding k-tuples by performing the operations
independently in each coordinate position in the appropriate system. That is, if
a ↔ (a1, a2, ..., ak),
b ↔ (b1, b2, ..., bk),
then
(31.24)
(31.25)
(31.26)
Proof Transforming between the two representations is fairly straightforward. Going from a
to (a1, a2, ..., ak) is quite easy and requires only k divisions. Computing a from inputs (a1, a2,
..., ak) is a bit more complicated, and is accomplished as follows. We begin by defining mi =
n/ni for i = 1, 2, ..., k; thus mi is the product of all of the nj's other than ni: mi = n1n2 · · · ni-1ni+1
· · · nk. We next define
(31.27)
for i = 1, 2, ..., k. Equation (31.27) is always well defined: since mi and ni are relatively prime
(by Theorem 31.6), Corollary 31.26 guarantees that (
) exists. Finally, we can compute
a as a function of a1, a2, ..., ak as follows:
(31.28)

