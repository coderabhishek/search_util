then consolidates the root list by linking roots of equal degree until at most one root remains
of each degree.

Figure 20.3: The action of FIB-HEAP-EXTRACT-MIN. (a) A Fibonacci heap H. (b) The
situation after the minimum node z is removed from the root list and its children are added to
the root list. (c)-(e) The array A and the trees after each of the first three iterations of the for
loop of lines 3-13 of the procedure CONSOLIDATE. The root list is processed by starting at
the node pointed to by min[H ] and following right pointers. Each part shows the values of w
and x at the end of an iteration. (f)-(h) The next iteration of the for loop, with the values of w
and x shown at the end of each iteration of the while loop of lines 6-12. Part (f) shows the
situation after the first time through the while loop. The node with key 23 has been linked to
the node with key 7, which is now pointed to by x. In part (g), the node with key 17 has been
linked to the node with key 7, which is still pointed to by x. In part (h), the node with key 24
has been linked to the node with key 7. Since no node was previously pointed to by A[3], at
the end of the for loop iteration, A[3] is set to point to the root of the resulting tree. (i)-(l) The
situation after each of the next four iterations of the for loop. (m) Fibonacci heap H after
reconstruction of the root list from the array A and determination of the new min[H] pointer.

