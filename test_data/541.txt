for , modify the FLOYD-WARSHALL procedure to compute the values, and rewrite the
PRINT-ALL-PAIRS-SHORTEST-PATH procedure to take the matrix
as an input.
How is the matrix Î˜ like the s table in the matrix-chain multiplication problem of Section
15.2?

Exercises 25.2-8
Give an O(V E)-time algorithm for computing the transitive closure of a directed graph G =
(V, E).

Exercises 25.2-9
Suppose that the transitive closure of a directed acyclic graph can be computed in f(|V|,|E|)
time, where f is a monotonically increasing function of |V| and |E|. Show that the time to
compute the transitive closure G* = (V, E*) of a general directed graph G = (V, E) is f(|V|,|E|)
+ O(V + E*).

25.3 Johnson's algorithm for sparse graphs
Johnson's algorithm finds shortest paths between all pairs in O(V2 lg V + V E) time. For sparse
graphs, it is asymptotically better than either repeated squaring of matrices or the FloydWarshall algorithm. The algorithm either returns a matrix of shortest-path weights for all pairs
of vertices or reports that the input graph contains a negative-weight cycle. Johnson's
algorithm uses as subroutines both Dijkstra's algorithm and the Bellman-Ford algorithm,
which are described in Chapter 24.
Johnson's algorithm uses the technique of reweighting, which works as follows. If all edge
weights w in a graph G = (V, E) are nonnegative, we can find shortest paths between all pairs
of vertices by running Dijkstra's algorithm once from each vertex; with the Fibonacci-heap
min-priority queue, the running time of this all-pairs algorithm is O(V2 lg V + V E). If G has
negative-weight edges but no negative-weight cycles, we simply compute a new set of
nonnegative edge weights that allows us to use the same method. The new set of edge weights
must satisfy two important properties.
1. For all pairs of vertices u, v V, a path p is a shortest path from u to v using weight
function w if and only if p is also a shortest path from u to v using weight function .
2. For all edges (u, v), the new weight
is nonnegative.
As we shall see in a moment, the preprocessing of G to determine the new weight function
can be performed in O(V E) time.
Preserving shortest paths by reweighting

