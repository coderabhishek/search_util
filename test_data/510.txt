Although the simplex algorithm, which is the focus of Chapter 29, does not always run in
time polynomial in the size of its input, there are other linear-programming algorithms that do
run in polynomial time. There are several reasons that it is important to understand the setup
of linear-programming problems. First, knowing that a given problem can be cast as a
polynomial-sized linear-programming problem immediately means that there is a polynomialtime algorithm for the problem. Second, there are many special cases of linear programming
for which faster algorithms exist. For example, as shown in this section, the single-source
shortest-paths problem is a special case of linear programming. Other problems that can be
cast as linear programming include the single-pair shortest-path problem (Exercise 24.4-4)
and the maximum-flow problem (Exercise 26.1-8).
Sometimes we don't really care about the objective function; we just wish to find any feasible
solution, that is, any vector x that satisfies Ax ≤ b, or to determine that no feasible solution
exists. We shall focus on one such feasibility problem.
Systems of difference constraints
In a system of difference constraints, each row of the linear-programming matrix A contains
one 1 and one -1, and all other entries of A are 0. Thus, the constraints given by Ax ≤ b are a
set of m difference constraints involving n unknowns, in which each constraint is a simple
linear inequality of the form
xj - xi ≤ bk,
where 1 ≤ i, j ≤ n and 1 ≤ k ≤ m.
For example, consider the problem of finding the 5-vector x = (xi) that satisfies

This problem is equivalent to finding the unknowns xi , for i = 1, 2, ..., 5, such that the
following 8 difference constraints are satisfied:
(24.3)
(24.4)
(24.5)
(24.6)
(24.7)
(24.8)
(24.9)
(24.10)

