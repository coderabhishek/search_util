polynomials
j - i.

and Qij (x) = A(x) mod Pij(x). Note that Qij (x) has degree at most

a. Prove that A(x) mod (x - z) = A(z) for any point z.
b. Prove that Qkk(x) = A(xk) and that Q0,n-1(x) = A(x).
c. Prove that for i ≤ k ≤ j, we have Qik (x) = Qij (x) mod Pik(x) and Qkj(x) = Qij (x) mod
Pkj(x).
d. Give an O(n lg2 n)-time algorithm to evaluate A(x0), A(x1),..., A(xn-1).

Problems 30-6: FFT using modular arithmetic
As defined, the Discrete Fourier Transform requires the use of complex numbers, which can
result in a loss of precision due to round-off errors. For some problems, the answer is known
to contain only integers, and it is desirable to utilize a variant of the FFT based on modular
arithmetic in order to guarantee that the answer is calculated exactly. An example of such a
problem is that of multiplying two polynomials with integer coefficients. Exercise 30.2-6
gives one approach, using a modulus of length Ω(n) bits to handle a DFT on n points. This
problem gives another approach that uses a modulus of the more reasonable length O(lg n); it
requires that you understand the material of Chapter 31. Let n be a power of 2.
a. Suppose that we search for the smallest k such that p = kn + 1 is prime. Give a simple
heuristic argument why we might expect k to be approximately lg n. (The value of k
might be much larger or smaller, but we can reasonably expect to examine O(lg n)
candidate values of k on average.) How does the expected length of p compare to the
length of n?
Let g be a generator of

, and let w = gk mod p.

b. Argue that the DFT and the inverse DFT are well-defined inverse operations modulo
p, where w is used as a principal nth root of unity.
c. Argue that the FFT and its inverse can be made to work modulo p in time O(n lg n),
where operations on words of O(lg n) bits take unit time. Assume that the algorithm is
given p and w.
d. Compute the DFT modulo p = 17 of the vector (0, 5, 3, 7, 7, 2, 1, 6). Note that g = 3 is
a generator of .

Chapter notes
VanLoan's book [303] is an outstanding treatment of the Fast Fourier Transform. Press,
Flannery, Teukolsky, and Vetterling [248, 249] have a good description of the Fast Fourier
Transform and its applications. For an excellent introduction to signal processing, a popular
FFT application area, see the texts by Oppenheim and Schafer [232] and Oppenheim and
Willsky [233]. The Oppenheim and Schafer book also shows how to handle cases in which n
is not an integer power of 2.
Fourier analysis is not limited to 1-dimensional data. It is widely used in image processing to
analyze data in 2 or more dimensions. The books by Gonzalez and Woods [127] and Pratt

