matching is a matching of maximum cardinality, that is, a matching M such that for any
matching M', we have |M| â‰¥ |M'|. In this section, we shall restrict our attention to finding
maximum matchings in bipartite graphs. We assume that the vertex set can be partitioned into
V = L R, where L and R are disjoint and all edges in E go between L and R. We further
assume that every vertex in V has at least one incident edge. Figure 26.7 illustrates the notion
of a matching.

Figure 26.7: A bibartite graph G = (V, E) with vertex partition V = L R. (a) A matching with
cardinality 2. (b) A maximum matching with cardinality 3.
The problem of finding a maximum matching in a bipartite graph has many practical
applications. As an example, we might consider matching a set L of machines with a set R of
tasks to be performed simultaneously. We take the presence of edge (u, v) in E to mean that a
particular machine u L is capable of performing a particular task v R. A maximum
matching provides work for as many machines as possible.
Finding a maximum bipartite matching
We can use the Ford-Fulkerson method to find a maximum matching in an undirected
bipartite graph G = (V, E) in time polynomial in |V| and |E|. The trick is to construct a flow
network in which flows correspond to matchings, as shown in Figure 26.8. We define the
corresponding flow network G' = (V', E') for the bipartite graph G as follows. We let the
source s and sink t be new vertices not in V, and we let V' = V {s, t}. If the vertex partition
of G is V = L R, the directed edges of G' are the edges of E, directed from L to R, along
with V new edges:
E' = {(s, u) : u

L}

{(u, v) : u

L, v

{(v, t) : v

R}.

R, and (u, v)

E}

