We must also account for updating the head and tail pointers and the list lengths, which take
only Θ(1) time per UNION operation. The total time used in updating the n objects is thus
O(n lg n).
The time for the entire sequence of m operations follows easily. Each MAKE-SET and FINDSET operation takes O(1) time, and there are O(m) of them. The total time for the entire
sequence is thus O(m + n lg n).

Exercises 21.2-1
Write pseudocode for MAKE-SET, FIND-SET, and UNION using the linked-list
representation and the weighted-union heuristic. Assume that each object x has an attribute
rep[x] pointing to the representative of the set containing x and that each set S has attributes
head[S], tail[S], and size[S] (which equals the length of the list).

Exercises 21.2-2
Show the data structure that results and the answers returned by the FIND-SET operations in
the following program. Use the linked-list representation with the weighted-union heuristic.
1
2
3
4
5
6
7
8
9
10
11

for i ← 1 to 16
do MAKE-SET(xi)
for i ← 1 to 15 by 2
do UNION(xi, xi+1)
for i ← 1 to 13 by 4
do UNION(xi, xi+2)
UNION(x1, x5)
UNION(x11, x13)
UNION(x1, x10)
FIND-SET(x2)
FIND-SET(x9)

Assume that if the sets containing xi and xj have the same size, then the operation UNION(xi,
xj) appends xj's list onto xi's list.

Exercises 21.2-3
Adapt the aggregate proof of Theorem 21.1 to obtain amortized time bounds of O(1) for
MAKE-SET and FIND-SET and O(lg n) for UNION using the linked-list representation and
the weighted-union heuristic.

