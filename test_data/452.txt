δ(s, v) = δ(s, u) + 1.
Proof If u is reachable from s, then so is v. In this case, the shortest path from s to v cannot be
longer than the shortest path from s to u followed by the edge (u, v), and thus the inequality
holds. If u is not reachable from s, then δ(s, u) = ∞, and the inequality holds.
We want to show that BFS properly computes d[v] = δ(s, v) for each vertex v
show that d[v] bounds δ(s, v) from above.

V. We first

Lemma 22.2
Let G = (V, E) be a directed or undirected graph, and suppose that BFS is run on G from a
given source vertex s V. Then upon termination, for each vertex v V, the value d[v]
computed by BFS satisfies d[v] ≥ δ(s, v).
Proof We use induction on the number of ENQUEUE operations. Our inductive hypothesis is
that d[v] ≥ δ(s, v) for all v V.
The basis of the induction is the situation immediately after s is enqueued in line 9 of BFS.
The inductive hypothesis holds here, because d[s] = 0 = δ(s, s) and d[v] = ∞ ≥ δ(s, v) for all v
V - {s}.
For the inductive step, consider a white vertex v that is discovered during the search from a
vertex u. The inductive hypothesis implies that d[u] ≥ δ(s, u). From the assignment performed
by line 15 and from Lemma 22.1, we obtain
d[v] = d[u] + 1
≥ δ(s, u) + 1
≥ δ(s, v).
Vertex v is then enqueued, and it is never enqueued again because it is also grayed and the
then clause of lines 14-17 is executed only for white vertices. Thus, the value of d[v] never
changes again, and the inductive hypothesis is maintained.

To prove that d[v] = δ(s, v), we must first show more precisely how the queue Q operates
during the course of BFS. The next lemma shows that at all times, there are at most two
distinct d values in the queue.
Lemma 22.3

