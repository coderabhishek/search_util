3
4

do for j ← 1 to n
do if i = j or (i, j)

5
6
7
8
9
10
11

E[G]

then
else
for k ← 1 to n
do for i ← 1 to n
do for j ← 1 to n
return T(n)

do

Figure 25.5 shows the matrices T(k) computed by the TRANSITIVE-CLOSURE procedure on
a sample graph. The TRANSITIVE-CLOSURE procedure, like the Floyd-Warshall algorithm,
runs in Θ(n3) time. On some computers, though, logical operations on single-bit values
execute faster than arithmetic operations on integer words of data. Moreover, because the
direct transitive-closure algorithm uses only boolean values rather than integer values, its
space requirement is less than the Floyd-Warshall algorithm's by a factor corresponding to the
size of a word of computer storage.

Figure 25.5: A directed graph and the matrices T(k) computed by the transitive-closure
algorithm.
Exercises 25.2-1
Run the Floyd-Warshall algorithm on the weighted, directed graph of Figure 25.2. Show the
matrix D(k) that results for each iteration of the outer loop.

Exercises 25.2-2
Show how to compute the transitive closure using the technique of Section 25.1.

Exercises 25.2-3

