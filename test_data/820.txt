y2 - x2 y1|. In this chapter, however, it will prove convenient to treat the cross product simply
as the value x1 y2 - x2 y1.

33.2 Determining whether any pair of segments intersects
This section presents an algorithm for determining whether any two line segments in a set of
segments intersect. The algorithm uses a technique known as "sweeping," which is common
to many computational-geometry algorithms. Moreover, as the exercises at the end of this
section show, this algorithm, or simple variations of it, can be used to solve other
computational-geometry problems.
The algorithm runs in O(n lg n) time, where n is the number of segments we are given. It
determines only whether or not any intersection exists; it does not print all the intersections.
(By Exercise 33.2-1, it takes â„¦(n2) time in the worst case to find all the intersections in a set
of n line segments.)
In sweeping, an imaginary vertical sweep line passes through the given set of geometric
objects, usually from left to right. The spatial dimension that the sweep line moves across, in
this case the x-dimension, is treated as a dimension of time. Sweeping provides a method for
ordering geometric objects, usually by placing them into a dynamic data structure, and for
taking advantage of relationships among them. The line-segment-intersection algorithm in this
section considers all the line-segment endpoints in left-to-right order and checks for an
intersection each time it encounters an endpoint.
To describe and prove correct our algorithm for determining whether any two of n line
segments intersect, we shall make two simplifying assumptions. First, we assume that no
input segment is vertical. Second, we assume that no three input segments intersect at a single
point. Exercises 33.2-8 and 33.2-9 ask you to show that the algorithm is robust enough that it
needs only a slight modification to work even when these assumptions do not hold. Indeed,
removing such simplifying assumptions and dealing with boundary conditions is often the
most difficult part of programming computational-geometry algorithms and proving their
correctness.
Ordering segments
Since we assume that there are no vertical segments, any input segment that intersects a given
vertical sweep line intersects it at a single point. Thus, we can order the segments that
intersect a vertical sweep line according to the y-coordinates of the points of intersection.
To be more precise, consider two segments s1 and s2. We say that these segments are
comparable at x if the vertical sweep line with x-coordinate x intersects both of them. We say
that s1 is above s2 at x, written s1 >x s2, if s1 and s2 are comparable at x and the intersection of
s1 with the sweep line at x is higher than the intersection of s2 with the same sweep line. In
Figure 33.4(a), for example, we have the relationships a >r c, a >t b, b >t c, a >t c, and b >u c.
Segment d is not comparable with any other segment.

