|C| = 2|A|
≤ 2|C*|,
thereby proving the theorem.

Let us reflect on this proof. At first one might wonder how it is possible to prove that the size
of the vertex cover returned by APPROX-VERTEX-COVER is at most twice the size of an
optimal vertex cover, since we do not know what the size of the optimal vertex cover is. The
answer is that we utilize a lower bound on the optimal vertex cover. As Exercise 35.1-2 asks
you to show, the set A of edges that were picked in line 4 of APPROX-VERTEX-COVER is
actually a maximal matching in the graph G. (A maximal matching is a matching that is not a
proper subset of any other matching.) The size of a maximal matching is, as we argued in the
proof of Theorem 35.1, a lower bound on the size of an optimal vertex cover. The algorithm
returns a vertex cover whose size is at most twice the size of the maximal matching A. By
relating the size of the solution returned to the lower bound, we obtain our approximation
ratio. We will use this methodology in later sections as well.
Exercises 35.1-1
Give an example of a graph for which APPROX-VERTEX-COVER always yields a
suboptimal solution.

Exercises 35.1-2
Let A denote the set of edges that were picked in line 4 of APPROX-VERTEX-COVER.
Prove that the set A is a maximal matching in the graph G.

Exercises 35.1-3: ⋆
Professor Nixon proposes the following heuristic to solve the vertex-cover problem.
Repeatedly select a vertex of highest degree, and remove all of its incident edges. Give an
example to show that the professor's heuristic does not have an approximation ratio of 2.
(Hint: Try a bipartite graph with vertices of uniform degree on the left and vertices of varying
degree on the right.)

Exercises 35.1-4

