Thus, T(n) = O(n lg n) and T′(n) = O(n lg n).
Exercises 33.4-1
Professor Smothers comes up with a scheme that allows the closest-pair algorithm to check
only 5 points following each point in array Y′. The idea is always to place points on line l into
set PL. Then, there cannot be pairs of coincident points on line l with one point in PL and one
in PR. Thus, at most 6 points can reside in the δ × 2δ rectangle. What is the flaw in the
professor's scheme?

Exercise 33.4-2
Without increasing the asymptotic running time of the algorithm, show how to ensure that the
set of points passed to the very first recursive call contains no coincident points. Prove that it
then suffices to check the points in the 5 array positions following each point in the array Y′.

Exercise 33.4-3
The distance between two points can be defined in ways other than euclidean. In the plane,
the Lm-distance between points p1 and p2 is given by the expression (|x1 - x2|m + |y1 - y2|m)1/m.
Euclidean distance, therefore, is L2-distance. Modify the closest-pair algorithm to use the L1distance, which is also known as the Manhattan distance.

Exercise 33.4-4
Given two points p1 and p2 in the plane, the LÝ-distance between them is given by max(|x1 x2|,|y1 - y2|). Modify the closest-pair algorithm to use the L∞-distance.

Exercise 33.4-5
Suggest a change to the closest-pair algorithm that avoids presorting the Y array but leaves the
running time as O(n lg n). (Hint: Merge sorted arrays YL and YR to form the sorted array Y.)

Problems 33-1: Convex layers

