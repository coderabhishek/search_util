generality (by Lemma 16.2), T″ has x and y as siblings. Let T′′′ be the tree T″ with the
common parent of x and y replaced by a leaf z with frequency f[z] = f[x] + f[y]. Then
B(T‴) = B(T″) - f[x] - f[y]
< B(T) - f[x] - f[y]
= B(T′),
yielding a contradiction to the assumption that T′ represents an optimal prefix code for C′.
Thus, T must represent an optimal prefix code for the alphabet C.

Theorem 16.4
Procedure HUFFMAN produces an optimal prefix code.
Proof Immediate from Lemmas 16.2 and 16.3.

Exercises 16.3-1
Prove that a binary tree that is not full cannot correspond to an optimal prefix code.

Exercises 16.3-2
What is an optimal Huffman code for the following set of frequencies, based on the first 8
Fibonacci numbers?
a:1 b:1 c:2 d:3 e:5 f:8 g:13 h:21

Can you generalize your answer to find the optimal code when the frequencies are the first n
Fibonacci numbers?
Exercises 16.3-3
Prove that the total cost of a tree for a code can also be computed as the sum, over all internal
nodes, of the combined frequencies of the two children of the node.

