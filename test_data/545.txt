Suppose that w(u, v) ≥ 0 for all edges (u, v)
functions w and ?

E. What is the relationship between the weight

Exercises 25.3-4
Professor Greenstreet claims that there is a simpler way to reweight edges than the method
used in Johnson's algorithm. Letting w* = min(u, v) E {w(u, v)}, just define
for all edges (u, v) E. What is wrong with the professor's method of reweighting?

Exercises 25.3-5
Suppose that we run Johnson's algorithm on a directed graph G with weight function w. Show
that if G contains a 0-weight cycle c, then
for every edge (u, v) in c.

Exercises 25.3-6
Professor Michener claims that there is no need to create a new source vertex in line 1 of
JOHNSON. He claims that instead we can just use G′ = G and let s be any vertex in V[G].
Give an example of a weighted, directed graph G for which incorporating the professor's idea
into JOHNSON causes incorrect answers. Then show that if G is strongly connected (every
vertex is reachable from every other vertex), the results returned by JOHNSON with the
professor's modification are correct.

Problems 25-1: Transitive closure of a dynamic graph
Suppose that we wish to maintain the transitive closure of a directed graph G = (V, E) as we
insert edges into E. That is, after each edge has been inserted, we want to update the transitive
closure of the edges inserted so far. Assume that the graph G has no edges initially and that
the transitive closure is to be represented as a boolean matrix.
a. Show how the transitive closure G* = (V, E*) of a graph G = (V, E) can be updated in
O(V2) time when a new edge is added to G.
b. Give an example of a graph G and an edge e such that Ω(V2) time is required to update
the transitive closure after the insertion of e into G.
c. Describe an efficient algorithm for updating the transitive closure as edges are inserted
into the graph. For any sequence of n insertions, your algorithm should run in total
time
, where ti is the time to update the transitive closure when the ith
edge is inserted. Prove that your algorithm attains this time bound.

